syntax = "proto3";

package SolidityContract;
option csharp_namespace = "AElf.SolidityContract";

import public "aelf/core.proto";
import "aelf/options.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

service SolidityContract {
    // Deploy a system smart contract on chain and return the address of the system contract deployed.
    rpc DeploySoliditySmartContract (DeploySoliditySmartContractInput) returns (aelf.Address) {
    }

    rpc DeployWasmSmartContract (DeploySoliditySmartContractInput) returns (aelf.Address) {
    }
    
    rpc InstantiateSoliditySmartContract (InstantiateSoliditySmartContractInput) returns (aelf.Address) {
    }

    rpc UploadSoliditySmartContract (UploadSoliditySmartContractInput) returns (aelf.Hash) {
    }

    rpc UpdateSoliditySmartContract (UpdateSoliditySmartContractInput) returns (google.protobuf.Empty) {
    }
}

message DeploySoliditySmartContractInput {
    // The category of contract code(1: Solidity).
    sint32 category = 1;
    // The byte array of the contract code.
    bytes code = 2;
    // The parameter of contract constructor.
    bytes parameter = 3;
    int64 value = 4;
}

message InstantiateSoliditySmartContractInput {
    sint32 category = 1;
    aelf.Hash code_hash = 2;
    bytes salt = 3;
}

message UploadSoliditySmartContractInput {
    sint32 category = 1;
    bytes code = 2;
}

message UpdateSoliditySmartContractInput {
    aelf.Address contract_address = 1;
    aelf.Hash code_hash = 2;
}
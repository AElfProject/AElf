syntax = "proto3";

package Association;

import "acs3.proto";
import "aelf/options.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

option csharp_namespace = "AElf.Contracts.Association";

service AssociationContract {
    
    option (aelf.csharp_state) = "AElf.Contracts.Association.AssociationState";
    
    // Actions    
    rpc CreateOrganization (CreateOrganizationInput) returns (aelf.Address) {
    }
    rpc CreateOrganizationBySystemContract(CreateOrganizationBySystemContractInput) returns (aelf.Address){
    }
    rpc AddMember(aelf.Address) returns (google.protobuf.Empty){
    }
    rpc RemoveMember(aelf.Address) returns (google.protobuf.Empty){
    }
    rpc ChangeMember(ChangeMemberInput) returns (google.protobuf.Empty){
    }
    //view
    rpc GetOrganization (aelf.Address) returns (Organization) {
        option (aelf.is_view) = true;
    }
    rpc CalculateOrganizationAddress(CreateOrganizationInput) returns (aelf.Address){
        option (aelf.is_view) = true;
    }
}

message CreateOrganizationInput{
    OrganizationMemberList organization_member_list = 1;
    acs3.ProposalReleaseThreshold proposal_release_threshold = 2;
    acs3.ProposerWhiteList proposer_white_list = 3;
    aelf.Hash creation_token = 4;
}

message Organization{
    OrganizationMemberList organization_member_list = 1;
    acs3.ProposalReleaseThreshold proposal_release_threshold = 2;
    acs3.ProposerWhiteList proposer_white_list = 3;
    aelf.Address organization_address = 4;
    aelf.Hash organization_hash = 5;
    aelf.Hash creation_token = 6;
}

message ProposalInfo {
    aelf.Hash proposal_id = 1;
    string contract_method_name = 2;
    aelf.Address to_address = 3;
    bytes params = 4;
    google.protobuf.Timestamp expired_time = 5;
    aelf.Address proposer = 6;
    aelf.Address organization_address = 7;
    repeated aelf.Address approvals = 8;
    repeated aelf.Address rejections = 9;
    repeated aelf.Address abstentions = 10;
    string proposal_description_url = 11;
}

message OrganizationMemberList {
    repeated aelf.Address organization_members = 1;
}

message ChangeMemberInput{
    aelf.Address old_member = 1;
    aelf.Address new_member = 2;
}

message CreateOrganizationBySystemContractInput {
    CreateOrganizationInput organization_creation_input = 1;
    string organization_address_feedback_method = 2;
}

message MemberAdded{
    option (aelf.is_event) = true;
    aelf.Address member = 1;
    aelf.Address organization_address = 2 [(aelf.is_indexed) = true];    
}

message MemberRemoved{
    option (aelf.is_event) = true;
    aelf.Address member = 1;
    aelf.Address organization_address = 2 [(aelf.is_indexed) = true];
}

message MemberChanged{
    option (aelf.is_event) = true;
    aelf.Address old_member = 1;
    aelf.Address new_member = 2;
    aelf.Address organization_address = 3 [(aelf.is_indexed) = true];
}
syntax = "proto3";

package TokenConverter;

import "aelf/options.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "aelf/core.proto";
import "authority_info.proto";

option csharp_namespace = "AElf.Contracts.TokenConverter";

service TokenConverterContract {

    option (aelf.csharp_state) = "AElf.Contracts.TokenConverter.TokenConverterContractState";

    // Actions
    rpc Initialize (InitializeInput) returns (google.protobuf.Empty) {
    }
    rpc SetConnector (Connector) returns (google.protobuf.Empty) {
    }
    rpc Buy (BuyInput) returns (google.protobuf.Empty) {
    }
    rpc Sell (SellInput) returns (google.protobuf.Empty) {
    }
    rpc SetFeeRate (google.protobuf.StringValue) returns (google.protobuf.Empty) {
    }
    rpc UpdateConnector(Connector) returns (google.protobuf.Empty){
    }
    rpc AddPairConnector(PairConnectorParam) returns (google.protobuf.Empty){
    }
    rpc EnableConnector (ToBeConnectedTokenInfo) returns (google.protobuf.Empty) {
    }
    rpc ChangeConnectorController (AuthorityInfo) returns (google.protobuf.Empty) {
    }
    // Views
    rpc GetFeeReceiverAddress (google.protobuf.Empty) returns (aelf.Address) {
        option (aelf.is_view) = true;
    }
    rpc GetPairConnector (TokenSymbol) returns (PairConnector) {
        option (aelf.is_view) = true;
    }
    rpc GetFeeRate (google.protobuf.Empty) returns (google.protobuf.StringValue) {
        option (aelf.is_view) = true;
    }
    rpc GetBaseTokenSymbol (google.protobuf.Empty) returns (TokenSymbol) {
        option (aelf.is_view) = true;
    }
    rpc GetNeededDeposit(ToBeConnectedTokenInfo) returns (DepositInfo) {
        option (aelf.is_view) = true;
    }
    rpc GetDepositConnectorBalance(google.protobuf.StringValue) returns (google.protobuf.Int64Value){
        option (aelf.is_view) = true;
    }
    rpc GetControllerForManageConnector (google.protobuf.Empty) returns (AuthorityInfo) {
        option (aelf.is_view) = true;
    }
    rpc IsSymbolAbleToSell (google.protobuf.StringValue) returns (google.protobuf.BoolValue) {
        option (aelf.is_view) = true;
    }
}

message Connector {
    string symbol = 1;
    int64 virtual_balance = 2;
    string weight = 3;
    bool is_virtual_balance_enabled = 4; // true if virtual balance is enabled, false if not
    bool is_purchase_enabled = 5;
    string related_symbol = 6;
    bool is_deposit_account = 7;
}

message TokenSymbol {
    string symbol = 1;
}

message InitializeInput {
    string base_token_symbol = 1;
    string fee_rate = 2;
    repeated Connector connectors = 3;
}

message BuyInput {
    string symbol = 1;
    int64 amount = 2;
    int64 pay_limit = 3; // No buy if paying more than this, 0 if no limit
}

message SellInput {
    string symbol = 1;
    int64 amount = 2;
    int64 receive_limit = 3; // No sell if receiving less than this, 0 if no limit
}

message GetExchangeRateInput {
    string from_symbol = 1;
    string to_symbol = 2;
}

message SellWithInlineActionInput {
    string symbol = 1;
    int64 amount = 2;
    int64 receive_limit = 3; // No sell if receiving less than this, 0 if no limit
    aelf.Address contract_address = 4;
    string method_name = 5;
    bytes params = 6;
}

// Events
message TokenBought {
    option (aelf.is_event) = true;
    string symbol = 1 [(aelf.is_indexed) = true];
    int64 bought_amount = 2;
    int64 base_amount = 3;
    int64 fee_amount =4;
}

message TokenSold {
    option (aelf.is_event) = true;
    string symbol = 1 [(aelf.is_indexed) = true];
    int64 sold_amount = 2;
    int64 base_amount = 3;
    int64 fee_amount =4;    
}
message PairConnectorParam {
    string resource_connector_symbol = 1;
    string resource_weight = 2;
    int64 native_virtual_balance = 3;
    string native_weight = 4;
}

message ToBeConnectedTokenInfo{
    string token_symbol = 1;
    int64 amount_to_token_convert = 2;
}
message DepositInfo{
    int64 need_amount = 1;
    int64 amount_out_of_token_convert = 2;
}
message PairConnector{
    Connector resource_connector = 1;
    Connector deposit_connector = 2;
}
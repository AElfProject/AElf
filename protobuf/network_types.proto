syntax = "proto3";

option csharp_namespace = "AElf.OS.Network";

import "google/protobuf/timestamp.proto";
import "aelf/core.proto";
import "kernel.proto";

// Messages related to block propagation/syncing

message BlockAnnouncement {
    aelf.Hash block_hash = 1;
    int64 block_height = 2;
    bool has_fork = 3;
}

message BlockWithTransactions {
    aelf.BlockHeader header = 1;
    repeated aelf.Transaction transactions = 2;
}

message BlocksRequest {
    aelf.Hash previous_block_hash = 1;
    int32 count = 2;
}

message BlockList {
    repeated BlockWithTransactions blocks = 1;
}

message BlockRequest {
    aelf.Hash hash = 1;
}

message BlockReply {
    string error = 1;
    BlockWithTransactions block = 2;
}

// Messages related to connection and handshaking

message Handshake {
    HandshakeData handshake_data = 1;
    bytes signature = 2;
    bool success = 3;
    aelf.BlockHeader best_chain_block_header = 4;
    sint64 lib_block_height = 5;
}

message HandshakeData {
    int32 chain_id = 1;
    int32 version = 2;
    int64 listening_port = 3;
    bytes pubkey = 4;
}

message FinalizeConnectReply {
    bool success = 1;
}

message ConnectReply {
    Handshake handshake = 1;
    AuthError error = 2;
}

enum AuthError {
    NONE = 0;
    UNKNOWN = 1;
    WRONG_SIGNATURE = 2;
    INVALID_HANDSHAKE = 3;
    INVALID_PEER = 4;
    CHAIN_MISMATCH = 5;
    PROTOCOL_MISMATCH = 6;
    CONNECTION_REFUSED = 7;
}

message DisconnectReason {
    Reason why = 1;
    enum Reason {
        SHUTDOWN = 0;
    }
}

message UpdateHandshakeRequest {
}

// Messages related to peer discovery

message Node {
    string endpoint = 1;
    bytes pubkey = 2;
}

message NodeList {
    repeated Node nodes = 1;
}

message NodesRequest {
    int32 max_count = 1;
}
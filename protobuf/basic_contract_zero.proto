syntax = "proto3";

package zero;

import "common.proto";
import "core.proto";
import "aelf_options.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

option csharp_namespace = "AElf.Contracts.Genesis";

service BasicContractZero {
    option (aelf.csharp_state) = "AElf.Contracts.Genesis.BasicContractZeroState";
    // Actions
    rpc DeploySystemSmartContract (SystemContractDeploymentInput) returns (Address) {
    }
    rpc DeploySmartContract (ContractDeploymentInput) returns (Address) {
    }
    rpc UpdateSmartContract (ContractUpdateInput) returns (Address) {
    }
    rpc ChangeContractOwner (ChangeContractOwnerInput) returns (google.protobuf.Empty) {
    }
    // Views
    rpc CurrentContractSerialNumber (google.protobuf.Empty) returns (google.protobuf.UInt64Value) {
        option (aelf.is_view) = true;
    }
    rpc GetContractInfo (Address) returns (ContractInfo) {
        option (aelf.is_view) = true;
    }
    rpc GetContractOwner (Address) returns (Address) {
        option (aelf.is_view) = true;
    }
    rpc GetContractHash (Address) returns (Hash) {
        option (aelf.is_view) = true;
    }
    rpc GetContractAddressByName (Hash) returns (Address) {
        option (aelf.is_view) = true;
    }
    rpc GetSmartContractRegistrationByAddress (Address) returns (SmartContractRegistration) {
        option (aelf.is_view) = true;
    }
}

// Events
message ContractDeployed
{
    option (aelf.is_event) = true;
    Address creator = 1 [(aelf.is_indexed) = true];
    Hash codeHash = 2 [(aelf.is_indexed) = true];
    Address address = 3;
}

message CodeUpdated
{
    option (aelf.is_event) = true;
    Address address = 1 [(aelf.is_indexed) = true];
    Hash oldCodeHash = 2;
    Hash newCodeHash = 3;
}

message OwnerChanged
{
    option (aelf.is_event) = true;
    Address address = 1 [(aelf.is_indexed) = true];
    Address oldOwner = 2;
    Address newOwner = 3;
}

syntax = "proto3";

package crossChain;

import public "aelf/options.proto";
import "google/protobuf/wrappers.proto";
import public "google/protobuf/timestamp.proto";
import public "google/protobuf/empty.proto";
import "aelf/core.proto";


option csharp_namespace = "AElf.Contracts.CrossChain";

service CrossChainContract {
    
    option (aelf.csharp_state) = "AElf.Contracts.CrossChain.CrossChainContractState";
    
    // Actions
    rpc Initialize (InitializeInput) returns (google.protobuf.Empty) {
    } 
    rpc SetInitialSideChainLifetimeControllerAddress(aelf.Address) returns (google.protobuf.Empty){
    }
    rpc SetInitialIndexingControllerAddress(aelf.Address) returns (google.protobuf.Empty){
    }
    
    // Views
    rpc GetSideChainCreator (google.protobuf.Int32Value) returns (aelf.Address) {
        option (aelf.is_view) = true;
    }
    rpc GetSideChainHeight (google.protobuf.Int32Value) returns (google.protobuf.Int64Value) {
        option (aelf.is_view) = true;
    }   
    rpc GetParentChainHeight (google.protobuf.Empty) returns (google.protobuf.Int64Value) {
        option (aelf.is_view) = true;
    }
    rpc GetParentChainId (google.protobuf.Empty) returns (google.protobuf.Int32Value) {
        option (aelf.is_view) = true;
    }
    rpc GetSideChainBalance (google.protobuf.Int32Value) returns (google.protobuf.Int64Value) {
        option (aelf.is_view) = true;
    }
    rpc GetSideChainIndexingFeePrice(google.protobuf.Int32Value) returns (google.protobuf.Int64Value) {
        option (aelf.is_view) = true;
    }
}

message InitializeInput {
    int32 parent_chain_id = 1;
    int64 creation_height_on_parent_chain = 2;
    bool is_privilege_preserved = 3;
}

message IndexedChainHeightDict{
    map<int32, int64> indexed_chain_heights = 1;
}

// Events
message SideChainCreatedEvent {
    option (aelf.is_event) = true;
    aelf.Address creator = 1;
    int32 chainId = 2;
}

message Disposed {
    option (aelf.is_event) = true;
    int32 chain_id = 1;
}
syntax = "proto3";

import "aelf/core.proto";
import "aelf/options.proto";
import "google/protobuf/empty.proto";

option csharp_namespace = "AElf.Contracts.Resource";

service ResourceContract {
    option (aelf.csharp_state) = "AElf.Contracts.Resource.ResourceContractState";
    // Actions
    rpc Initialize (InitializeInput) returns (google.protobuf.Empty) {
    }
    rpc IssueResource (ResourceAmount) returns (google.protobuf.Empty) {
    }
    rpc BuyResource (ResourceAmount) returns (google.protobuf.Empty) {
    }
    rpc SellResource (ResourceAmount) returns (google.protobuf.Empty) {
    }
    rpc LockResource (ResourceAmount) returns (google.protobuf.Empty) {
    }
    rpc UnlockResource (UserResourceAmount) returns (google.protobuf.Empty) {
    }
    // Views
    rpc GetElfTokenAddress (google.protobuf.Empty) returns (aelf.Address) {
        option (aelf.is_view) = true;
    }
    rpc GetFeeAddress (google.protobuf.Empty) returns (aelf.Address) {
        option (aelf.is_view) = true;
    }
    rpc GetResourceControllerAddress (google.protobuf.Empty) returns (aelf.Address) {
        option (aelf.is_view) = true;
    }
    rpc GetConverter (ResourceId) returns (Converter) {
        option (aelf.is_view) = true;
    }
    rpc GetUserBalance (UserResourceId) returns (aelf.SInt64Value) {
        option (aelf.is_view) = true;
    }
    rpc GetUserLockedBalance (UserResourceId) returns (aelf.SInt64Value) {
        option (aelf.is_view) = true;
    }
    rpc GetExchangeBalance (ResourceId) returns (aelf.SInt64Value) {
        option (aelf.is_view) = true;
    }
    rpc GetElfBalance (ResourceId) returns (aelf.SInt64Value) {
        option (aelf.is_view) = true;
    }
}

enum ResourceType {
    UndefinedResourceType = 0;
    Ram = 1;
    Cpu = 2;
    Net = 3;
    Sto = 4;
}

message Converter {
    sint64 res_balance = 1;
    sint64 elf_balance = 2;
    sint64 res_weight = 3; // Weight based on MAX of 1,000,000
    sint64 elf_weight = 4; // Weight based on MAX of 1,000,000
    ResourceType type = 5;
}

message UserResourceKey {
    aelf.Address address = 1;
    ResourceType type = 2;
}

message ResourceId {
    ResourceType type = 1;
}

message UserResourceId {
    aelf.Address address = 1;
    ResourceType type = 2;
}

message InitializeInput {
    aelf.Address elf_token_address = 1;
    aelf.Address fee_address = 2;
    aelf.Address resource_controller_address = 3;
}

message ResourceAmount {
    ResourceType type = 1;
    sint64 amount = 2;
}

message UserResourceAmount {
    aelf.Address user = 1;
    ResourceType type = 2;
    sint64 amount = 3;
}
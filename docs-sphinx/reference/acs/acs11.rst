ACS11 - Cross Chain Consensus Standard
======================================

ACS11 is used to customize consensus mechanisms for cross chain.

Interface
---------

The contract inherited from ACS11 need implement the following interfaces:

Methods
~~~~~~~

+-------------------------------------+----------------------------------------------------------------+----------------------------------------------------------------+---------------------------------------------------------------+
| Method Name                         | Request Type                                                   | Response Type                                                  | Description                                                   |
+=====================================+================================================================+================================================================+===============================================================+
| UpdateInformationFromCrossChain     | `google.protobuf.BytesValue <#google.protobuf.BytesValue>`__   | `google.protobuf.Empty <#google.protobuf.Empty>`__             | Update the consensus information of the side chain.           |
+-------------------------------------+----------------------------------------------------------------+----------------------------------------------------------------+---------------------------------------------------------------+
| GetChainInitializationInformation   | `google.protobuf.BytesValue <#google.protobuf.BytesValue>`__   | `google.protobuf.BytesValue <#google.protobuf.BytesValue>`__   | Get the current miner list and consensus round information.   |
+-------------------------------------+----------------------------------------------------------------+----------------------------------------------------------------+---------------------------------------------------------------+
| CheckCrossChainIndexingPermission   | `aelf.Address <#aelf.Address>`__                               | `google.protobuf.BoolValue <#google.protobuf.BoolValue>`__     | Verify that the input address is the current miner.           |
+-------------------------------------+----------------------------------------------------------------+----------------------------------------------------------------+---------------------------------------------------------------+

Types
~~~~~

.. raw:: html

   <div id="aelf.Address">

.. raw:: html

   </div>

aelf.Address
^^^^^^^^^^^^

+---------+----------------------+---------------+---------+
| Field   | Type                 | Description   | Label   |
+=========+======================+===============+=========+
| value   | `bytes <#bytes>`__   |               |         |
+---------+----------------------+---------------+---------+

.. raw:: html

   <div id="aelf.BinaryMerkleTree">

.. raw:: html

   </div>

aelf.BinaryMerkleTree
^^^^^^^^^^^^^^^^^^^^^

+---------------+-------------------------+---------------------------+------------+
| Field         | Type                    | Description               | Label      |
+===============+=========================+===========================+============+
| nodes         | `Hash <#aelf.Hash>`__   | The leaf nodes.           | repeated   |
+---------------+-------------------------+---------------------------+------------+
| root          | `Hash <#aelf.Hash>`__   | The root node hash.       |            |
+---------------+-------------------------+---------------------------+------------+
| leaf\_count   | `int32 <#int32>`__      | The count of leaf node.   |            |
+---------------+-------------------------+---------------------------+------------+

.. raw:: html

   <div id="aelf.Hash">

.. raw:: html

   </div>

aelf.Hash
^^^^^^^^^

+---------+----------------------+---------------+---------+
| Field   | Type                 | Description   | Label   |
+=========+======================+===============+=========+
| value   | `bytes <#bytes>`__   |               |         |
+---------+----------------------+---------------+---------+

.. raw:: html

   <div id="aelf.LogEvent">

.. raw:: html

   </div>

aelf.LogEvent
^^^^^^^^^^^^^

+----------------+-------------------------------+----------------------------------------------+------------+
| Field          | Type                          | Description                                  | Label      |
+================+===============================+==============================================+============+
| address        | `Address <#aelf.Address>`__   | The contract address.                        |            |
+----------------+-------------------------------+----------------------------------------------+------------+
| name           | `string <#string>`__          | The name of the log event.                   |            |
+----------------+-------------------------------+----------------------------------------------+------------+
| indexed        | `bytes <#bytes>`__            | The indexed data, used to calculate bloom.   | repeated   |
+----------------+-------------------------------+----------------------------------------------+------------+
| non\_indexed   | `bytes <#bytes>`__            | The non indexed data.                        |            |
+----------------+-------------------------------+----------------------------------------------+------------+

.. raw:: html

   <div id="aelf.MerklePath">

.. raw:: html

   </div>

aelf.MerklePath
^^^^^^^^^^^^^^^

+-----------------------+---------------------------------------------+--------------------------+------------+
| Field                 | Type                                        | Description              | Label      |
+=======================+=============================================+==========================+============+
| merkle\_path\_nodes   | `MerklePathNode <#aelf.MerklePathNode>`__   | The merkle path nodes.   | repeated   |
+-----------------------+---------------------------------------------+--------------------------+------------+

.. raw:: html

   <div id="aelf.MerklePathNode">

.. raw:: html

   </div>

aelf.MerklePathNode
^^^^^^^^^^^^^^^^^^^

+-------------------------+-------------------------+------------------------------------+---------+
| Field                   | Type                    | Description                        | Label   |
+=========================+=========================+====================================+=========+
| hash                    | `Hash <#aelf.Hash>`__   | The node hash.                     |         |
+-------------------------+-------------------------+------------------------------------+---------+
| is\_left\_child\_node   | `bool <#bool>`__        | Whether it is a left child node.   |         |
+-------------------------+-------------------------+------------------------------------+---------+

.. raw:: html

   <div id="aelf.SInt32Value">

.. raw:: html

   </div>

aelf.SInt32Value
^^^^^^^^^^^^^^^^

+---------+------------------------+---------------+---------+
| Field   | Type                   | Description   | Label   |
+=========+========================+===============+=========+
| value   | `sint32 <#sint32>`__   |               |         |
+---------+------------------------+---------------+---------+

.. raw:: html

   <div id="aelf.SInt64Value">

.. raw:: html

   </div>

aelf.SInt64Value
^^^^^^^^^^^^^^^^

+---------+------------------------+---------------+---------+
| Field   | Type                   | Description   | Label   |
+=========+========================+===============+=========+
| value   | `sint64 <#sint64>`__   |               |         |
+---------+------------------------+---------------+---------+

.. raw:: html

   <div id="aelf.ScopedStatePath">

.. raw:: html

   </div>

aelf.ScopedStatePath
^^^^^^^^^^^^^^^^^^^^

+-----------+-----------------------------------+----------------------------------------------------------+---------+
| Field     | Type                              | Description                                              | Label   |
+===========+===================================+==========================================================+=========+
| address   | `Address <#aelf.Address>`__       | The scope address, which will be the contract address.   |         |
+-----------+-----------------------------------+----------------------------------------------------------+---------+
| path      | `StatePath <#aelf.StatePath>`__   | The path of contract state.                              |         |
+-----------+-----------------------------------+----------------------------------------------------------+---------+

.. raw:: html

   <div id="aelf.SmartContractRegistration">

.. raw:: html

   </div>

aelf.SmartContractRegistration
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

+------------------------+-------------------------+-----------------------------------------+---------+
| Field                  | Type                    | Description                             | Label   |
+========================+=========================+=========================================+=========+
| category               | `sint32 <#sint32>`__    | The category of contract code(0: C#).   |         |
+------------------------+-------------------------+-----------------------------------------+---------+
| code                   | `bytes <#bytes>`__      | The byte array of the contract code.    |         |
+------------------------+-------------------------+-----------------------------------------+---------+
| code\_hash             | `Hash <#aelf.Hash>`__   | The hash of the contract code.          |         |
+------------------------+-------------------------+-----------------------------------------+---------+
| is\_system\_contract   | `bool <#bool>`__        | Whether it is a system contract.        |         |
+------------------------+-------------------------+-----------------------------------------+---------+
| version                | `int32 <#int32>`__      | The version of the current contract.    |         |
+------------------------+-------------------------+-----------------------------------------+---------+

.. raw:: html

   <div id="aelf.StatePath">

.. raw:: html

   </div>

aelf.StatePath
^^^^^^^^^^^^^^

+---------+------------------------+---------------------------------------+------------+
| Field   | Type                   | Description                           | Label      |
+=========+========================+=======================================+============+
| parts   | `string <#string>`__   | The partial path of the state path.   | repeated   |
+---------+------------------------+---------------------------------------+------------+

.. raw:: html

   <div id="aelf.Transaction">

.. raw:: html

   </div>

aelf.Transaction
^^^^^^^^^^^^^^^^

+----------------------+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+---------+
| Field                | Type                          | Description                                                                                                                                                                                        | Label   |
+======================+===============================+====================================================================================================================================================================================================+=========+
| from                 | `Address <#aelf.Address>`__   | The address of the sender of the transaction.                                                                                                                                                      |         |
+----------------------+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+---------+
| to                   | `Address <#aelf.Address>`__   | The address of the contract when calling a contract.                                                                                                                                               |         |
+----------------------+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+---------+
| ref\_block\_number   | `int64 <#int64>`__            | The height of the referenced block hash.                                                                                                                                                           |         |
+----------------------+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+---------+
| ref\_block\_prefix   | `bytes <#bytes>`__            | The first four bytes of the referenced block hash.                                                                                                                                                 |         |
+----------------------+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+---------+
| method\_name         | `string <#string>`__          | The name of a method in the smart contract at the To address.                                                                                                                                      |         |
+----------------------+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+---------+
| params               | `bytes <#bytes>`__            | The parameters to pass to the smart contract method.                                                                                                                                               |         |
+----------------------+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+---------+
| signature            | `bytes <#bytes>`__            | When signing a transaction it’s actually a subset of the fields: from/to and the target method as well as the parameter that were given. It also contains the reference block number and prefix.   |         |
+----------------------+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+---------+

.. raw:: html

   <div id="aelf.TransactionExecutingStateSet">

.. raw:: html

   </div>

aelf.TransactionExecutingStateSet
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

+-----------+---------------------------------------------------------------------------------------------------+-----------------------+------------+
| Field     | Type                                                                                              | Description           | Label      |
+===========+===================================================================================================+=======================+============+
| writes    | `TransactionExecutingStateSet.WritesEntry <#aelf.TransactionExecutingStateSet.WritesEntry>`__     | The changed states.   | repeated   |
+-----------+---------------------------------------------------------------------------------------------------+-----------------------+------------+
| reads     | `TransactionExecutingStateSet.ReadsEntry <#aelf.TransactionExecutingStateSet.ReadsEntry>`__       | The read states.      | repeated   |
+-----------+---------------------------------------------------------------------------------------------------+-----------------------+------------+
| deletes   | `TransactionExecutingStateSet.DeletesEntry <#aelf.TransactionExecutingStateSet.DeletesEntry>`__   | The deleted states.   | repeated   |
+-----------+---------------------------------------------------------------------------------------------------+-----------------------+------------+

.. raw:: html

   <div id="aelf.TransactionExecutingStateSet.DeletesEntry">

.. raw:: html

   </div>

aelf.TransactionExecutingStateSet.DeletesEntry
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

+---------+------------------------+---------------+---------+
| Field   | Type                   | Description   | Label   |
+=========+========================+===============+=========+
| key     | `string <#string>`__   |               |         |
+---------+------------------------+---------------+---------+
| value   | `bool <#bool>`__       |               |         |
+---------+------------------------+---------------+---------+

.. raw:: html

   <div id="aelf.TransactionExecutingStateSet.ReadsEntry">

.. raw:: html

   </div>

aelf.TransactionExecutingStateSet.ReadsEntry
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

+---------+------------------------+---------------+---------+
| Field   | Type                   | Description   | Label   |
+=========+========================+===============+=========+
| key     | `string <#string>`__   |               |         |
+---------+------------------------+---------------+---------+
| value   | `bool <#bool>`__       |               |         |
+---------+------------------------+---------------+---------+

.. raw:: html

   <div id="aelf.TransactionExecutingStateSet.WritesEntry">

.. raw:: html

   </div>

aelf.TransactionExecutingStateSet.WritesEntry
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

+---------+------------------------+---------------+---------+
| Field   | Type                   | Description   | Label   |
+=========+========================+===============+=========+
| key     | `string <#string>`__   |               |         |
+---------+------------------------+---------------+---------+
| value   | `bytes <#bytes>`__     |               |         |
+---------+------------------------+---------------+---------+

.. raw:: html

   <div id="aelf.TransactionResult">

.. raw:: html

   </div>

aelf.TransactionResult
^^^^^^^^^^^^^^^^^^^^^^

+-------------------+---------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+------------+
| Field             | Type                                                          | Description                                                                                                                                                                                                                                                                | Label      |
+===================+===============================================================+============================================================================================================================================================================================================================================================================+============+
| transaction\_id   | `Hash <#aelf.Hash>`__                                         | The transaction id.                                                                                                                                                                                                                                                        |            |
+-------------------+---------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+------------+
| status            | `TransactionResultStatus <#aelf.TransactionResultStatus>`__   | The transaction result status.                                                                                                                                                                                                                                             |            |
+-------------------+---------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+------------+
| logs              | `LogEvent <#aelf.LogEvent>`__                                 | The log events.                                                                                                                                                                                                                                                            | repeated   |
+-------------------+---------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+------------+
| bloom             | `bytes <#bytes>`__                                            | Bloom filter for transaction logs. A transaction log event can be defined in the contract and stored in the bloom filter after the transaction is executed. Through this filter, we can quickly search for and determine whether a log exists in the transaction result.   |            |
+-------------------+---------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+------------+
| return\_value     | `bytes <#bytes>`__                                            | The return value of the transaction execution.                                                                                                                                                                                                                             |            |
+-------------------+---------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+------------+
| block\_number     | `int64 <#int64>`__                                            | The height of the block hat packages the transaction.                                                                                                                                                                                                                      |            |
+-------------------+---------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+------------+
| block\_hash       | `Hash <#aelf.Hash>`__                                         | The hash of the block hat packages the transaction.                                                                                                                                                                                                                        |            |
+-------------------+---------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+------------+
| error             | `string <#string>`__                                          | Failed execution error message.                                                                                                                                                                                                                                            |            |
+-------------------+---------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+------------+

.. raw:: html

   <div id="aelf.TransactionResultStatus">

.. raw:: html

   </div>

aelf.TransactionResultStatus
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

+----------------------------+----------+-------------------------------------------------------------------------------------+
| Name                       | Number   | Description                                                                         |
+============================+==========+=====================================================================================+
| NOT\_EXISTED               | 0        | The execution result of the transaction does not exist.                             |
+----------------------------+----------+-------------------------------------------------------------------------------------+
| PENDING                    | 1        | The transaction is in the transaction pool waiting to be packaged.                  |
+----------------------------+----------+-------------------------------------------------------------------------------------+
| FAILED                     | 2        | Transaction execution failed.                                                       |
+----------------------------+----------+-------------------------------------------------------------------------------------+
| MINED                      | 3        | The transaction was successfully executed and successfully packaged into a block.   |
+----------------------------+----------+-------------------------------------------------------------------------------------+
| CONFLICT                   | 4        | When executed in parallel, there are conflicts with other transactions.             |
+----------------------------+----------+-------------------------------------------------------------------------------------+
| PENDING\_VALIDATION        | 5        | The transaction is waiting for validation.                                          |
+----------------------------+----------+-------------------------------------------------------------------------------------+
| NODE\_VALIDATION\_FAILED   | 6        | Transaction validation failed.                                                      |
+----------------------------+----------+-------------------------------------------------------------------------------------+

Example
-------

ACS11 declares methods for the scenes about customize consensus mechanisms for cross chain. AElf provides the implementation for ACS11, ``AEDPoS Contract``.
You can refer to the implementation of the :doc:`AEDPoS contract api<../smart-contract-api/consensus>`.
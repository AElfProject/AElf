jobs:
# All tasks on Windows....
- job: build_all_windows
  displayName: Build all tasks (Windows)
  timeoutInMinutes: 120
  pool:
    vmImage: windows-latest
  variables:
    CI_TEST: true
  steps:
  - task: UseDotNet@2
    displayName: 'Install .NET Core SDK'
    inputs:
      version: 3.1.102
  - script: choco install protoc --version=3.11.4 -y
    displayName: 'Install protobuf'
  - script: choco install unzip
    displayName: 'Install unzip'
  - task: BatchScript@1
    displayName: 'Download AElf build tools'
    inputs:
      filename: 'scripts/download_binary.bat'
  - script: PowerShell.exe -file build.ps1 -target=Test-with-Codecov-N --parts=3 --n=1
    displayName: 'Build and Test'
  - task: PublishTestResults@2
    condition: always()
    inputs:
      testRunner: VSTest
      testResultsFiles: '**/*.trx'
  
  - task: Palmmedia.reportgenerator.reportgenerator-build-release-task.reportgenerator@4
    displayName: ReportGenerator
    inputs:
      reports: '$(Build.SourcesDirectory)/test/*/TestResults/*/coverage.cobertura.xml'
      targetdir: '$(Build.SourcesDirectory)/CodeCoverage'
      reporttypes: 'Cobertura'
      assemblyfilters: '-xunit*'
  - script: PowerShell.exe -file build.ps1 -target=Upload-Coverage-Azure
    displayName: 'Upload data to Codecov'
# All tasks on Linux
- job: build_all_linux
  displayName: Build all tasks (Linux)
  timeoutInMinutes: 120
  pool:
    vmImage: ubuntu-latest
  steps:
  - task: UseDotNet@2
    displayName: 'Install .NET Core SDK'
    inputs:
      version: 3.1.102
  - script: bash scripts/install_protobuf.sh
  - script: bash scripts/download_binary.sh
  - script: bash build.sh -target=Test-with-Codecov-N --parts=3 --n=2
    displayName: 'Build and Test'
  - task: PublishTestResults@2
    condition: always()
    inputs:
      testRunner: VSTest
      testResultsFiles: '**/*.trx'
  
  - task: Palmmedia.reportgenerator.reportgenerator-build-release-task.reportgenerator@4
    displayName: ReportGenerator
    inputs:
      reports: '$(Build.SourcesDirectory)/test/*/TestResults/*/coverage.cobertura.xml'
      targetdir: '$(Build.SourcesDirectory)/CodeCoverage'
      reporttypes: 'Cobertura'
      assemblyfilters: '-xunit*'
  - script: bash build.sh -target=Upload-Coverage-Azure
    displayName: 'Upload data to Codecov'

# All tasks on macOS
- job: build_all_darwin
  displayName: Build all tasks (macOS)
  timeoutInMinutes: 120
  pool:
    vmImage: macos-latest
  variables:
    CI_TEST: true
  steps:
  - task: UseDotNet@2
    displayName: 'Install .NET Core SDK'
    inputs:
      version: 3.1.102
  - script: bash scripts/install_protobuf.sh
  - script: bash scripts/download_binary.sh
  - script: bash build.sh -target=Test-with-Codecov-N --parts=3 --n=3
    displayName: 'Build and Test'
  - task: PublishTestResults@2
    condition: always()
    inputs:
      testRunner: VSTest
      testResultsFiles: '**/*.trx'
  
  - task: Palmmedia.reportgenerator.reportgenerator-build-release-task.reportgenerator@4
    displayName: ReportGenerator
    inputs:
      reports: '$(Build.SourcesDirectory)/test/*/TestResults/*/coverage.cobertura.xml'
      targetdir: '$(Build.SourcesDirectory)/CodeCoverage'
      reporttypes: 'Cobertura'
      assemblyfilters: '-xunit*'
  - script: bash build.sh -target=Upload-Coverage-Azure
    displayName: 'Upload data to Codecov'
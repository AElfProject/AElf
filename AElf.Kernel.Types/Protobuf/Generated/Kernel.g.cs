// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: kernel.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace AElf.Kernel {

  /// <summary>Holder for reflection information generated from kernel.proto</summary>
  public static partial class KernelReflection {

    #region Descriptor
    /// <summary>File descriptor for kernel.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static KernelReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxrZXJuZWwucHJvdG8aGWdvb2dsZS9wcm90b2J1Zi9hbnkucHJvdG8aH2dv",
            "b2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8aCmhhc2gucHJvdG8inAEK",
            "C1RyYW5zYWN0aW9uEhMKBEZyb20YASABKAsyBS5IYXNoEhEKAlRvGAIgASgL",
            "MgUuSGFzaBITCgtJbmNyZW1lbnRJZBgDIAEoBBISCgpNZXRob2ROYW1lGAQg",
            "ASgJEg4KBlBhcmFtcxgFIAEoDBILCgNGZWUYBiABKAQSCQoBUhgHIAEoDBIJ",
            "CgFTGAggASgMEgkKAVAYCSABKAwiUAoQU3RhdGVWYWx1ZUNoYW5nZRITCgRQ",
            "YXRoGAEgASgLMgUuSGFzaBITCgtCZWZvcmVWYWx1ZRgCIAEoDBISCgpBZnRl",
            "clZhbHVlGAMgASgMIj8KCkV2ZW50RmllbGQSDAoETmFtZRgBIAEoCRIjCgVW",
            "YWx1ZRgCIAEoCzIULmdvb2dsZS5wcm90b2J1Zi5BbnkiVgoITG9nRXZlbnQS",
            "FgoHQWRkcmVzcxgBIAEoCzIFLkhhc2gSFAoFVG9waWMYAiABKAsyBS5IYXNo",
            "EhwKB0RldGFpbHMYAyADKAsyCy5FdmVudEZpZWxkIrYBCgZSZXRWYWwSHQoE",
            "VHlwZRgBIAEoDjIPLlJldFZhbC5SZXRUeXBlEgwKBERhdGEYAiABKAwifwoH",
            "UmV0VHlwZRIICgRWb2lkEAASCAoEQm9vbBABEgkKBUludDMyEAISCgoGVUlu",
            "dDMyEAMSCQoFSW50NjQQBBIKCgZVSW50NjQQBRIKCgZTdHJpbmcQBhIJCgVC",
            "eXRlcxAHEg0KCVBiTWVzc2FnZRAIEgwKCFVzZXJUeXBlEAkiigIKC0Jsb2Nr",
            "SGVhZGVyEg8KB1ZlcnNpb24YASABKAUSIAoRUHJldmlvdXNCbG9ja0hhc2gY",
            "AiABKAsyBS5IYXNoEisKHE1lcmtsZVRyZWVSb290T2ZUcmFuc2FjdGlvbnMY",
            "AyABKAsyBS5IYXNoEikKGk1lcmtsZVRyZWVSb290T2ZXb3JsZFN0YXRlGAQg",
            "ASgLMgUuSGFzaBINCgVJbmRleBgFIAEoBBIJCgFSGAYgASgMEgkKAVMYByAB",
            "KAwSCQoBUBgIIAEoDBIoCgRUaW1lGAkgASgLMhouZ29vZ2xlLnByb3RvYnVm",
            "LlRpbWVzdGFtcBIWCgdDaGFpbklkGAogASgLMgUuSGFzaCJECglCbG9ja0Jv",
            "ZHkSGgoLQmxvY2tIZWFkZXIYASABKAsyBS5IYXNoEhsKDFRyYW5zYWN0aW9u",
            "cxgCIAMoCzIFLkhhc2giZwoFQmxvY2sSHAoGSGVhZGVyGAEgASgLMgwuQmxv",
            "Y2tIZWFkZXISGAoEQm9keRgCIAEoCzIKLkJsb2NrQm9keRImChBmdWxsVHJh",
            "bnNhY3Rpb25zGAMgAygLMgwuVHJhbnNhY3Rpb24iYQoZU21hcnRDb250cmFj",
            "dFJlZ2lzdHJhdGlvbhIQCghDYXRlZ29yeRgBIAEoBRIbCgxDb250cmFjdEhh",
            "c2gYAiABKAsyBS5IYXNoEhUKDUNvbnRyYWN0Qnl0ZXMYAyABKAwiewoXU21h",
            "cnRDb250cmFjdERlcGxveW1lbnQSGwoMQ29udHJhY3RIYXNoGAEgASgLMgUu",
            "SGFzaBIVCgZDYWxsZXIYAiABKAsyBS5IYXNoEhcKD0NvbnN0cnVjdFBhcmFt",
            "cxgDIAEoDBITCgtJbmNyZW1lbnRJZBgEIAEoBCIkCgpQYXJhbWV0ZXJzEhYK",
            "BlBhcmFtcxgBIAMoCzIGLlBhcmFtIqQCCgVQYXJhbRIQCgZpbnRWYWwYASAB",
            "KAVIABIRCgd1aW50VmFsGAIgASgNSAASEQoHbG9uZ1ZhbBgDIAEoA0gAEhIK",
            "CHVsb25nVmFsGAQgASgESAASEQoHYm9vbFZhbBgFIAEoCEgAEhIKCGJ5dGVz",
            "VmFsGAYgASgMSAASEAoGc3RyVmFsGAcgASgJSAASDgoEZFZhbBgIIAEoAUgA",
            "EhgKB2hhc2hWYWwYCSABKAsyBS5IYXNoSAASMQoLcmVnaXN0ZXJWYWwYCiAB",
            "KAsyGi5TbWFydENvbnRyYWN0UmVnaXN0cmF0aW9uSAASMQoNZGVwbG95bWVu",
            "dFZhbBgLIAEoCzIYLlNtYXJ0Q29udHJhY3REZXBsb3ltZW50SABCBgoEZGF0",
            "YSJsChpTbWFydENvbnRyYWN0SW52b2tlQ29udGV4dBIVCgZDYWxsZXIYASAB",
            "KAsyBS5IYXNoEhMKC0luY3JlbWVudElkGAIgASgEEhIKCk1ldGhvZE5hbWUY",
            "AyABKAkSDgoGUGFyYW1zGAQgASgMInwKBkNoYW5nZRIWCgdCZWZvcmVzGAEg",
            "AygLMgUuSGFzaBIUCgVBZnRlchgCIAEoCzIFLkhhc2gSHQoOVHJhbnNhY3Rp",
            "b25JZHMYAyABKAsyBS5IYXNoEiUKFkxhdGVzdENoYW5nZWRCbG9ja0hhc2gY",
            "BCABKAsyBS5IYXNoIjwKDlBhaXJIYXNoQ2hhbmdlEhIKA0tleRgBIAEoCzIF",
            "Lkhhc2gSFgoFVmFsdWUYAiABKAsyBy5DaGFuZ2UiLAoLQ2hhbmdlc0RpY3QS",
            "HQoERGljdBgBIAMoCzIPLlBhaXJIYXNoQ2hhbmdlIjsKBUNoYWluEhEKAklk",
            "GAEgASgLMgUuSGFzaBIfChBHZW5lc2lzQmxvY2tIYXNoGAIgASgLMgUuSGFz",
            "aCIeCg1CbG9ja1Byb2R1Y2VyEg0KBU5vZGVzGAEgAygJIp8BCgZCUEluZm8S",
            "DQoFT3JkZXIYASABKAUSDQoFSXNFQlAYAiABKAgSFgoHSW5WYWx1ZRgDIAEo",
            "CzIFLkhhc2gSFwoIT3V0VmFsdWUYBCABKAsyBS5IYXNoEhgKCVNpZ25hdHVy",
            "ZRgFIAEoCzIFLkhhc2gSLAoIVGltZVNsb3QYBiABKAsyGi5nb29nbGUucHJv",
            "dG9idWYuVGltZXN0YW1wImUKCVJvdW5kSW5mbxIiCgRJbmZvGAEgAygLMhQu",
            "Um91bmRJbmZvLkluZm9FbnRyeRo0CglJbmZvRW50cnkSCwoDa2V5GAEgASgJ",
            "EhYKBXZhbHVlGAIgASgLMgcuQlBJbmZvOgI4ASIpCghEUG9TSW5mbxIdCglS",
            "b3VuZEluZm8YASADKAsyCi5Sb3VuZEluZm8qXgoORGF0YUFjY2Vzc01vZGUS",
            "GgoWUmVhZE9ubHlBY2NvdW50U2hhcmluZxAAEhsKF1JlYWRXcml0ZUFjY291",
            "bnRTaGFyaW5nEAESEwoPQWNjb3VudFNwZWNpZmljEAJCDqoCC0FFbGYuS2Vy",
            "bmVsYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::AElf.Kernel.HashReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::AElf.Kernel.DataAccessMode), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.Transaction), global::AElf.Kernel.Transaction.Parser, new[]{ "From", "To", "IncrementId", "MethodName", "Params", "Fee", "R", "S", "P" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.StateValueChange), global::AElf.Kernel.StateValueChange.Parser, new[]{ "Path", "BeforeValue", "AfterValue" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.EventField), global::AElf.Kernel.EventField.Parser, new[]{ "Name", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.LogEvent), global::AElf.Kernel.LogEvent.Parser, new[]{ "Address", "Topic", "Details" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.RetVal), global::AElf.Kernel.RetVal.Parser, new[]{ "Type", "Data" }, null, new[]{ typeof(global::AElf.Kernel.RetVal.Types.RetType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.BlockHeader), global::AElf.Kernel.BlockHeader.Parser, new[]{ "Version", "PreviousBlockHash", "MerkleTreeRootOfTransactions", "MerkleTreeRootOfWorldState", "Index", "R", "S", "P", "Time", "ChainId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.BlockBody), global::AElf.Kernel.BlockBody.Parser, new[]{ "BlockHeader", "Transactions" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.Block), global::AElf.Kernel.Block.Parser, new[]{ "Header", "Body", "FullTransactions" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.SmartContractRegistration), global::AElf.Kernel.SmartContractRegistration.Parser, new[]{ "Category", "ContractHash", "ContractBytes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.SmartContractDeployment), global::AElf.Kernel.SmartContractDeployment.Parser, new[]{ "ContractHash", "Caller", "ConstructParams", "IncrementId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.Parameters), global::AElf.Kernel.Parameters.Parser, new[]{ "Params" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.Param), global::AElf.Kernel.Param.Parser, new[]{ "IntVal", "UintVal", "LongVal", "UlongVal", "BoolVal", "BytesVal", "StrVal", "DVal", "HashVal", "RegisterVal", "DeploymentVal" }, new[]{ "Data" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.SmartContractInvokeContext), global::AElf.Kernel.SmartContractInvokeContext.Parser, new[]{ "Caller", "IncrementId", "MethodName", "Params" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.Change), global::AElf.Kernel.Change.Parser, new[]{ "Befores", "After", "TransactionIds", "LatestChangedBlockHash" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.PairHashChange), global::AElf.Kernel.PairHashChange.Parser, new[]{ "Key", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.ChangesDict), global::AElf.Kernel.ChangesDict.Parser, new[]{ "Dict" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.Chain), global::AElf.Kernel.Chain.Parser, new[]{ "Id", "GenesisBlockHash" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.BlockProducer), global::AElf.Kernel.BlockProducer.Parser, new[]{ "Nodes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.BPInfo), global::AElf.Kernel.BPInfo.Parser, new[]{ "Order", "IsEBP", "InValue", "OutValue", "Signature", "TimeSlot" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.RoundInfo), global::AElf.Kernel.RoundInfo.Parser, new[]{ "Info" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.DPoSInfo), global::AElf.Kernel.DPoSInfo.Parser, new[]{ "RoundInfo" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum DataAccessMode {
    [pbr::OriginalName("ReadOnlyAccountSharing")] ReadOnlyAccountSharing = 0,
    [pbr::OriginalName("ReadWriteAccountSharing")] ReadWriteAccountSharing = 1,
    [pbr::OriginalName("AccountSpecific")] AccountSpecific = 2,
  }

  #endregion

  #region Messages
  public sealed partial class Transaction : pb::IMessage<Transaction> {
    private static readonly pb::MessageParser<Transaction> _parser = new pb::MessageParser<Transaction>(() => new Transaction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Transaction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.KernelReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Transaction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Transaction(Transaction other) : this() {
      From = other.from_ != null ? other.From.Clone() : null;
      To = other.to_ != null ? other.To.Clone() : null;
      incrementId_ = other.incrementId_;
      methodName_ = other.methodName_;
      params_ = other.params_;
      fee_ = other.fee_;
      r_ = other.r_;
      s_ = other.s_;
      p_ = other.p_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Transaction Clone() {
      return new Transaction(this);
    }

    /// <summary>Field number for the "From" field.</summary>
    public const int FromFieldNumber = 1;
    private global::AElf.Kernel.Hash from_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Kernel.Hash From {
      get { return from_; }
      set {
        from_ = value;
      }
    }

    /// <summary>Field number for the "To" field.</summary>
    public const int ToFieldNumber = 2;
    private global::AElf.Kernel.Hash to_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Kernel.Hash To {
      get { return to_; }
      set {
        to_ = value;
      }
    }

    /// <summary>Field number for the "IncrementId" field.</summary>
    public const int IncrementIdFieldNumber = 3;
    private ulong incrementId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong IncrementId {
      get { return incrementId_; }
      set {
        incrementId_ = value;
      }
    }

    /// <summary>Field number for the "MethodName" field.</summary>
    public const int MethodNameFieldNumber = 4;
    private string methodName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MethodName {
      get { return methodName_; }
      set {
        methodName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Params" field.</summary>
    public const int ParamsFieldNumber = 5;
    private pb::ByteString params_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Params {
      get { return params_; }
      set {
        params_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Fee" field.</summary>
    public const int FeeFieldNumber = 6;
    private ulong fee_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Fee {
      get { return fee_; }
      set {
        fee_ = value;
      }
    }

    /// <summary>Field number for the "R" field.</summary>
    public const int RFieldNumber = 7;
    private pb::ByteString r_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString R {
      get { return r_; }
      set {
        r_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "S" field.</summary>
    public const int SFieldNumber = 8;
    private pb::ByteString s_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString S {
      get { return s_; }
      set {
        s_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "P" field.</summary>
    public const int PFieldNumber = 9;
    private pb::ByteString p_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString P {
      get { return p_; }
      set {
        p_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Transaction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Transaction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(From, other.From)) return false;
      if (!object.Equals(To, other.To)) return false;
      if (IncrementId != other.IncrementId) return false;
      if (MethodName != other.MethodName) return false;
      if (Params != other.Params) return false;
      if (Fee != other.Fee) return false;
      if (R != other.R) return false;
      if (S != other.S) return false;
      if (P != other.P) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (from_ != null) hash ^= From.GetHashCode();
      if (to_ != null) hash ^= To.GetHashCode();
      if (IncrementId != 0UL) hash ^= IncrementId.GetHashCode();
      if (MethodName.Length != 0) hash ^= MethodName.GetHashCode();
      if (Params.Length != 0) hash ^= Params.GetHashCode();
      if (Fee != 0UL) hash ^= Fee.GetHashCode();
      if (R.Length != 0) hash ^= R.GetHashCode();
      if (S.Length != 0) hash ^= S.GetHashCode();
      if (P.Length != 0) hash ^= P.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (from_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(From);
      }
      if (to_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(To);
      }
      if (IncrementId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(IncrementId);
      }
      if (MethodName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MethodName);
      }
      if (Params.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(Params);
      }
      if (Fee != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(Fee);
      }
      if (R.Length != 0) {
        output.WriteRawTag(58);
        output.WriteBytes(R);
      }
      if (S.Length != 0) {
        output.WriteRawTag(66);
        output.WriteBytes(S);
      }
      if (P.Length != 0) {
        output.WriteRawTag(74);
        output.WriteBytes(P);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (from_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(From);
      }
      if (to_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(To);
      }
      if (IncrementId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(IncrementId);
      }
      if (MethodName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MethodName);
      }
      if (Params.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Params);
      }
      if (Fee != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Fee);
      }
      if (R.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(R);
      }
      if (S.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(S);
      }
      if (P.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(P);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Transaction other) {
      if (other == null) {
        return;
      }
      if (other.from_ != null) {
        if (from_ == null) {
          from_ = new global::AElf.Kernel.Hash();
        }
        From.MergeFrom(other.From);
      }
      if (other.to_ != null) {
        if (to_ == null) {
          to_ = new global::AElf.Kernel.Hash();
        }
        To.MergeFrom(other.To);
      }
      if (other.IncrementId != 0UL) {
        IncrementId = other.IncrementId;
      }
      if (other.MethodName.Length != 0) {
        MethodName = other.MethodName;
      }
      if (other.Params.Length != 0) {
        Params = other.Params;
      }
      if (other.Fee != 0UL) {
        Fee = other.Fee;
      }
      if (other.R.Length != 0) {
        R = other.R;
      }
      if (other.S.Length != 0) {
        S = other.S;
      }
      if (other.P.Length != 0) {
        P = other.P;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (from_ == null) {
              from_ = new global::AElf.Kernel.Hash();
            }
            input.ReadMessage(from_);
            break;
          }
          case 18: {
            if (to_ == null) {
              to_ = new global::AElf.Kernel.Hash();
            }
            input.ReadMessage(to_);
            break;
          }
          case 24: {
            IncrementId = input.ReadUInt64();
            break;
          }
          case 34: {
            MethodName = input.ReadString();
            break;
          }
          case 42: {
            Params = input.ReadBytes();
            break;
          }
          case 48: {
            Fee = input.ReadUInt64();
            break;
          }
          case 58: {
            R = input.ReadBytes();
            break;
          }
          case 66: {
            S = input.ReadBytes();
            break;
          }
          case 74: {
            P = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StateValueChange : pb::IMessage<StateValueChange> {
    private static readonly pb::MessageParser<StateValueChange> _parser = new pb::MessageParser<StateValueChange>(() => new StateValueChange());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StateValueChange> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.KernelReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StateValueChange() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StateValueChange(StateValueChange other) : this() {
      Path = other.path_ != null ? other.Path.Clone() : null;
      beforeValue_ = other.beforeValue_;
      afterValue_ = other.afterValue_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StateValueChange Clone() {
      return new StateValueChange(this);
    }

    /// <summary>Field number for the "Path" field.</summary>
    public const int PathFieldNumber = 1;
    private global::AElf.Kernel.Hash path_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Kernel.Hash Path {
      get { return path_; }
      set {
        path_ = value;
      }
    }

    /// <summary>Field number for the "BeforeValue" field.</summary>
    public const int BeforeValueFieldNumber = 2;
    private pb::ByteString beforeValue_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString BeforeValue {
      get { return beforeValue_; }
      set {
        beforeValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AfterValue" field.</summary>
    public const int AfterValueFieldNumber = 3;
    private pb::ByteString afterValue_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString AfterValue {
      get { return afterValue_; }
      set {
        afterValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StateValueChange);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StateValueChange other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Path, other.Path)) return false;
      if (BeforeValue != other.BeforeValue) return false;
      if (AfterValue != other.AfterValue) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (path_ != null) hash ^= Path.GetHashCode();
      if (BeforeValue.Length != 0) hash ^= BeforeValue.GetHashCode();
      if (AfterValue.Length != 0) hash ^= AfterValue.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (path_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Path);
      }
      if (BeforeValue.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(BeforeValue);
      }
      if (AfterValue.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(AfterValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (path_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Path);
      }
      if (BeforeValue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(BeforeValue);
      }
      if (AfterValue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(AfterValue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StateValueChange other) {
      if (other == null) {
        return;
      }
      if (other.path_ != null) {
        if (path_ == null) {
          path_ = new global::AElf.Kernel.Hash();
        }
        Path.MergeFrom(other.Path);
      }
      if (other.BeforeValue.Length != 0) {
        BeforeValue = other.BeforeValue;
      }
      if (other.AfterValue.Length != 0) {
        AfterValue = other.AfterValue;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (path_ == null) {
              path_ = new global::AElf.Kernel.Hash();
            }
            input.ReadMessage(path_);
            break;
          }
          case 18: {
            BeforeValue = input.ReadBytes();
            break;
          }
          case 26: {
            AfterValue = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EventField : pb::IMessage<EventField> {
    private static readonly pb::MessageParser<EventField> _parser = new pb::MessageParser<EventField>(() => new EventField());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventField> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.KernelReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventField() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventField(EventField other) : this() {
      name_ = other.name_;
      Value = other.value_ != null ? other.Value.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventField Clone() {
      return new EventField(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Value" field.</summary>
    public const int ValueFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Any value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Any Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventField);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventField other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(Value, other.Value)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (value_ != null) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (value_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (value_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventField other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.value_ != null) {
        if (value_ == null) {
          value_ = new global::Google.Protobuf.WellKnownTypes.Any();
        }
        Value.MergeFrom(other.Value);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (value_ == null) {
              value_ = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(value_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class LogEvent : pb::IMessage<LogEvent> {
    private static readonly pb::MessageParser<LogEvent> _parser = new pb::MessageParser<LogEvent>(() => new LogEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LogEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.KernelReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogEvent(LogEvent other) : this() {
      Address = other.address_ != null ? other.Address.Clone() : null;
      Topic = other.topic_ != null ? other.Topic.Clone() : null;
      details_ = other.details_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogEvent Clone() {
      return new LogEvent(this);
    }

    /// <summary>Field number for the "Address" field.</summary>
    public const int AddressFieldNumber = 1;
    private global::AElf.Kernel.Hash address_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Kernel.Hash Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }

    /// <summary>Field number for the "Topic" field.</summary>
    public const int TopicFieldNumber = 2;
    private global::AElf.Kernel.Hash topic_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Kernel.Hash Topic {
      get { return topic_; }
      set {
        topic_ = value;
      }
    }

    /// <summary>Field number for the "Details" field.</summary>
    public const int DetailsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::AElf.Kernel.EventField> _repeated_details_codec
        = pb::FieldCodec.ForMessage(26, global::AElf.Kernel.EventField.Parser);
    private readonly pbc::RepeatedField<global::AElf.Kernel.EventField> details_ = new pbc::RepeatedField<global::AElf.Kernel.EventField>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Kernel.EventField> Details {
      get { return details_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LogEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LogEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Address, other.Address)) return false;
      if (!object.Equals(Topic, other.Topic)) return false;
      if(!details_.Equals(other.details_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (address_ != null) hash ^= Address.GetHashCode();
      if (topic_ != null) hash ^= Topic.GetHashCode();
      hash ^= details_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (address_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Address);
      }
      if (topic_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Topic);
      }
      details_.WriteTo(output, _repeated_details_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (address_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Address);
      }
      if (topic_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Topic);
      }
      size += details_.CalculateSize(_repeated_details_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LogEvent other) {
      if (other == null) {
        return;
      }
      if (other.address_ != null) {
        if (address_ == null) {
          address_ = new global::AElf.Kernel.Hash();
        }
        Address.MergeFrom(other.Address);
      }
      if (other.topic_ != null) {
        if (topic_ == null) {
          topic_ = new global::AElf.Kernel.Hash();
        }
        Topic.MergeFrom(other.Topic);
      }
      details_.Add(other.details_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (address_ == null) {
              address_ = new global::AElf.Kernel.Hash();
            }
            input.ReadMessage(address_);
            break;
          }
          case 18: {
            if (topic_ == null) {
              topic_ = new global::AElf.Kernel.Hash();
            }
            input.ReadMessage(topic_);
            break;
          }
          case 26: {
            details_.AddEntriesFrom(input, _repeated_details_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RetVal : pb::IMessage<RetVal> {
    private static readonly pb::MessageParser<RetVal> _parser = new pb::MessageParser<RetVal>(() => new RetVal());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RetVal> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.KernelReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RetVal() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RetVal(RetVal other) : this() {
      type_ = other.type_;
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RetVal Clone() {
      return new RetVal(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::AElf.Kernel.RetVal.Types.RetType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Kernel.RetVal.Types.RetType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "Data" field.</summary>
    public const int DataFieldNumber = 2;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RetVal);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RetVal other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RetVal other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            type_ = (global::AElf.Kernel.RetVal.Types.RetType) input.ReadEnum();
            break;
          }
          case 18: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the RetVal message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum RetType {
        [pbr::OriginalName("Void")] Void = 0,
        [pbr::OriginalName("Bool")] Bool = 1,
        [pbr::OriginalName("Int32")] Int32 = 2,
        [pbr::OriginalName("UInt32")] Uint32 = 3,
        [pbr::OriginalName("Int64")] Int64 = 4,
        [pbr::OriginalName("UInt64")] Uint64 = 5,
        [pbr::OriginalName("String")] String = 6,
        [pbr::OriginalName("Bytes")] Bytes = 7,
        [pbr::OriginalName("PbMessage")] PbMessage = 8,
        [pbr::OriginalName("UserType")] UserType = 9,
      }

    }
    #endregion

  }

  public sealed partial class BlockHeader : pb::IMessage<BlockHeader> {
    private static readonly pb::MessageParser<BlockHeader> _parser = new pb::MessageParser<BlockHeader>(() => new BlockHeader());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockHeader> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.KernelReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockHeader() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockHeader(BlockHeader other) : this() {
      version_ = other.version_;
      PreviousBlockHash = other.previousBlockHash_ != null ? other.PreviousBlockHash.Clone() : null;
      MerkleTreeRootOfTransactions = other.merkleTreeRootOfTransactions_ != null ? other.MerkleTreeRootOfTransactions.Clone() : null;
      MerkleTreeRootOfWorldState = other.merkleTreeRootOfWorldState_ != null ? other.MerkleTreeRootOfWorldState.Clone() : null;
      index_ = other.index_;
      r_ = other.r_;
      s_ = other.s_;
      p_ = other.p_;
      Time = other.time_ != null ? other.Time.Clone() : null;
      ChainId = other.chainId_ != null ? other.ChainId.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockHeader Clone() {
      return new BlockHeader(this);
    }

    /// <summary>Field number for the "Version" field.</summary>
    public const int VersionFieldNumber = 1;
    private int version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "PreviousBlockHash" field.</summary>
    public const int PreviousBlockHashFieldNumber = 2;
    private global::AElf.Kernel.Hash previousBlockHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Kernel.Hash PreviousBlockHash {
      get { return previousBlockHash_; }
      set {
        previousBlockHash_ = value;
      }
    }

    /// <summary>Field number for the "MerkleTreeRootOfTransactions" field.</summary>
    public const int MerkleTreeRootOfTransactionsFieldNumber = 3;
    private global::AElf.Kernel.Hash merkleTreeRootOfTransactions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Kernel.Hash MerkleTreeRootOfTransactions {
      get { return merkleTreeRootOfTransactions_; }
      set {
        merkleTreeRootOfTransactions_ = value;
      }
    }

    /// <summary>Field number for the "MerkleTreeRootOfWorldState" field.</summary>
    public const int MerkleTreeRootOfWorldStateFieldNumber = 4;
    private global::AElf.Kernel.Hash merkleTreeRootOfWorldState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Kernel.Hash MerkleTreeRootOfWorldState {
      get { return merkleTreeRootOfWorldState_; }
      set {
        merkleTreeRootOfWorldState_ = value;
      }
    }

    /// <summary>Field number for the "Index" field.</summary>
    public const int IndexFieldNumber = 5;
    private ulong index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "R" field.</summary>
    public const int RFieldNumber = 6;
    private pb::ByteString r_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString R {
      get { return r_; }
      set {
        r_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "S" field.</summary>
    public const int SFieldNumber = 7;
    private pb::ByteString s_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString S {
      get { return s_; }
      set {
        s_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "P" field.</summary>
    public const int PFieldNumber = 8;
    private pb::ByteString p_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString P {
      get { return p_; }
      set {
        p_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Time" field.</summary>
    public const int TimeFieldNumber = 9;
    private global::Google.Protobuf.WellKnownTypes.Timestamp time_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "ChainId" field.</summary>
    public const int ChainIdFieldNumber = 10;
    private global::AElf.Kernel.Hash chainId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Kernel.Hash ChainId {
      get { return chainId_; }
      set {
        chainId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockHeader);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockHeader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      if (!object.Equals(PreviousBlockHash, other.PreviousBlockHash)) return false;
      if (!object.Equals(MerkleTreeRootOfTransactions, other.MerkleTreeRootOfTransactions)) return false;
      if (!object.Equals(MerkleTreeRootOfWorldState, other.MerkleTreeRootOfWorldState)) return false;
      if (Index != other.Index) return false;
      if (R != other.R) return false;
      if (S != other.S) return false;
      if (P != other.P) return false;
      if (!object.Equals(Time, other.Time)) return false;
      if (!object.Equals(ChainId, other.ChainId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Version != 0) hash ^= Version.GetHashCode();
      if (previousBlockHash_ != null) hash ^= PreviousBlockHash.GetHashCode();
      if (merkleTreeRootOfTransactions_ != null) hash ^= MerkleTreeRootOfTransactions.GetHashCode();
      if (merkleTreeRootOfWorldState_ != null) hash ^= MerkleTreeRootOfWorldState.GetHashCode();
      if (Index != 0UL) hash ^= Index.GetHashCode();
      if (R.Length != 0) hash ^= R.GetHashCode();
      if (S.Length != 0) hash ^= S.GetHashCode();
      if (P.Length != 0) hash ^= P.GetHashCode();
      if (time_ != null) hash ^= Time.GetHashCode();
      if (chainId_ != null) hash ^= ChainId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Version != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Version);
      }
      if (previousBlockHash_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PreviousBlockHash);
      }
      if (merkleTreeRootOfTransactions_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(MerkleTreeRootOfTransactions);
      }
      if (merkleTreeRootOfWorldState_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(MerkleTreeRootOfWorldState);
      }
      if (Index != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(Index);
      }
      if (R.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(R);
      }
      if (S.Length != 0) {
        output.WriteRawTag(58);
        output.WriteBytes(S);
      }
      if (P.Length != 0) {
        output.WriteRawTag(66);
        output.WriteBytes(P);
      }
      if (time_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Time);
      }
      if (chainId_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(ChainId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Version);
      }
      if (previousBlockHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PreviousBlockHash);
      }
      if (merkleTreeRootOfTransactions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MerkleTreeRootOfTransactions);
      }
      if (merkleTreeRootOfWorldState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MerkleTreeRootOfWorldState);
      }
      if (Index != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Index);
      }
      if (R.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(R);
      }
      if (S.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(S);
      }
      if (P.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(P);
      }
      if (time_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Time);
      }
      if (chainId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChainId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockHeader other) {
      if (other == null) {
        return;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      if (other.previousBlockHash_ != null) {
        if (previousBlockHash_ == null) {
          previousBlockHash_ = new global::AElf.Kernel.Hash();
        }
        PreviousBlockHash.MergeFrom(other.PreviousBlockHash);
      }
      if (other.merkleTreeRootOfTransactions_ != null) {
        if (merkleTreeRootOfTransactions_ == null) {
          merkleTreeRootOfTransactions_ = new global::AElf.Kernel.Hash();
        }
        MerkleTreeRootOfTransactions.MergeFrom(other.MerkleTreeRootOfTransactions);
      }
      if (other.merkleTreeRootOfWorldState_ != null) {
        if (merkleTreeRootOfWorldState_ == null) {
          merkleTreeRootOfWorldState_ = new global::AElf.Kernel.Hash();
        }
        MerkleTreeRootOfWorldState.MergeFrom(other.MerkleTreeRootOfWorldState);
      }
      if (other.Index != 0UL) {
        Index = other.Index;
      }
      if (other.R.Length != 0) {
        R = other.R;
      }
      if (other.S.Length != 0) {
        S = other.S;
      }
      if (other.P.Length != 0) {
        P = other.P;
      }
      if (other.time_ != null) {
        if (time_ == null) {
          time_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Time.MergeFrom(other.Time);
      }
      if (other.chainId_ != null) {
        if (chainId_ == null) {
          chainId_ = new global::AElf.Kernel.Hash();
        }
        ChainId.MergeFrom(other.ChainId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Version = input.ReadInt32();
            break;
          }
          case 18: {
            if (previousBlockHash_ == null) {
              previousBlockHash_ = new global::AElf.Kernel.Hash();
            }
            input.ReadMessage(previousBlockHash_);
            break;
          }
          case 26: {
            if (merkleTreeRootOfTransactions_ == null) {
              merkleTreeRootOfTransactions_ = new global::AElf.Kernel.Hash();
            }
            input.ReadMessage(merkleTreeRootOfTransactions_);
            break;
          }
          case 34: {
            if (merkleTreeRootOfWorldState_ == null) {
              merkleTreeRootOfWorldState_ = new global::AElf.Kernel.Hash();
            }
            input.ReadMessage(merkleTreeRootOfWorldState_);
            break;
          }
          case 40: {
            Index = input.ReadUInt64();
            break;
          }
          case 50: {
            R = input.ReadBytes();
            break;
          }
          case 58: {
            S = input.ReadBytes();
            break;
          }
          case 66: {
            P = input.ReadBytes();
            break;
          }
          case 74: {
            if (time_ == null) {
              time_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(time_);
            break;
          }
          case 82: {
            if (chainId_ == null) {
              chainId_ = new global::AElf.Kernel.Hash();
            }
            input.ReadMessage(chainId_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BlockBody : pb::IMessage<BlockBody> {
    private static readonly pb::MessageParser<BlockBody> _parser = new pb::MessageParser<BlockBody>(() => new BlockBody());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockBody> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.KernelReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockBody() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockBody(BlockBody other) : this() {
      BlockHeader = other.blockHeader_ != null ? other.BlockHeader.Clone() : null;
      transactions_ = other.transactions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockBody Clone() {
      return new BlockBody(this);
    }

    /// <summary>Field number for the "BlockHeader" field.</summary>
    public const int BlockHeaderFieldNumber = 1;
    private global::AElf.Kernel.Hash blockHeader_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Kernel.Hash BlockHeader {
      get { return blockHeader_; }
      set {
        blockHeader_ = value;
      }
    }

    /// <summary>Field number for the "Transactions" field.</summary>
    public const int TransactionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::AElf.Kernel.Hash> _repeated_transactions_codec
        = pb::FieldCodec.ForMessage(18, global::AElf.Kernel.Hash.Parser);
    private readonly pbc::RepeatedField<global::AElf.Kernel.Hash> transactions_ = new pbc::RepeatedField<global::AElf.Kernel.Hash>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Kernel.Hash> Transactions {
      get { return transactions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockBody);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockBody other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(BlockHeader, other.BlockHeader)) return false;
      if(!transactions_.Equals(other.transactions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (blockHeader_ != null) hash ^= BlockHeader.GetHashCode();
      hash ^= transactions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (blockHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BlockHeader);
      }
      transactions_.WriteTo(output, _repeated_transactions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (blockHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BlockHeader);
      }
      size += transactions_.CalculateSize(_repeated_transactions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockBody other) {
      if (other == null) {
        return;
      }
      if (other.blockHeader_ != null) {
        if (blockHeader_ == null) {
          blockHeader_ = new global::AElf.Kernel.Hash();
        }
        BlockHeader.MergeFrom(other.BlockHeader);
      }
      transactions_.Add(other.transactions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (blockHeader_ == null) {
              blockHeader_ = new global::AElf.Kernel.Hash();
            }
            input.ReadMessage(blockHeader_);
            break;
          }
          case 18: {
            transactions_.AddEntriesFrom(input, _repeated_transactions_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Block : pb::IMessage<Block> {
    private static readonly pb::MessageParser<Block> _parser = new pb::MessageParser<Block>(() => new Block());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Block> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.KernelReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Block() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Block(Block other) : this() {
      Header = other.header_ != null ? other.Header.Clone() : null;
      Body = other.body_ != null ? other.Body.Clone() : null;
      fullTransactions_ = other.fullTransactions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Block Clone() {
      return new Block(this);
    }

    /// <summary>Field number for the "Header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::AElf.Kernel.BlockHeader header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Kernel.BlockHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "Body" field.</summary>
    public const int BodyFieldNumber = 2;
    private global::AElf.Kernel.BlockBody body_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Kernel.BlockBody Body {
      get { return body_; }
      set {
        body_ = value;
      }
    }

    /// <summary>Field number for the "fullTransactions" field.</summary>
    public const int FullTransactionsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::AElf.Kernel.Transaction> _repeated_fullTransactions_codec
        = pb::FieldCodec.ForMessage(26, global::AElf.Kernel.Transaction.Parser);
    private readonly pbc::RepeatedField<global::AElf.Kernel.Transaction> fullTransactions_ = new pbc::RepeatedField<global::AElf.Kernel.Transaction>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Kernel.Transaction> FullTransactions {
      get { return fullTransactions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Block);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Block other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (!object.Equals(Body, other.Body)) return false;
      if(!fullTransactions_.Equals(other.fullTransactions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (body_ != null) hash ^= Body.GetHashCode();
      hash ^= fullTransactions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (body_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Body);
      }
      fullTransactions_.WriteTo(output, _repeated_fullTransactions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (body_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Body);
      }
      size += fullTransactions_.CalculateSize(_repeated_fullTransactions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Block other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          header_ = new global::AElf.Kernel.BlockHeader();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.body_ != null) {
        if (body_ == null) {
          body_ = new global::AElf.Kernel.BlockBody();
        }
        Body.MergeFrom(other.Body);
      }
      fullTransactions_.Add(other.fullTransactions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              header_ = new global::AElf.Kernel.BlockHeader();
            }
            input.ReadMessage(header_);
            break;
          }
          case 18: {
            if (body_ == null) {
              body_ = new global::AElf.Kernel.BlockBody();
            }
            input.ReadMessage(body_);
            break;
          }
          case 26: {
            fullTransactions_.AddEntriesFrom(input, _repeated_fullTransactions_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SmartContractRegistration : pb::IMessage<SmartContractRegistration> {
    private static readonly pb::MessageParser<SmartContractRegistration> _parser = new pb::MessageParser<SmartContractRegistration>(() => new SmartContractRegistration());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SmartContractRegistration> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.KernelReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SmartContractRegistration() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SmartContractRegistration(SmartContractRegistration other) : this() {
      category_ = other.category_;
      ContractHash = other.contractHash_ != null ? other.ContractHash.Clone() : null;
      contractBytes_ = other.contractBytes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SmartContractRegistration Clone() {
      return new SmartContractRegistration(this);
    }

    /// <summary>Field number for the "Category" field.</summary>
    public const int CategoryFieldNumber = 1;
    private int category_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Category {
      get { return category_; }
      set {
        category_ = value;
      }
    }

    /// <summary>Field number for the "ContractHash" field.</summary>
    public const int ContractHashFieldNumber = 2;
    private global::AElf.Kernel.Hash contractHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Kernel.Hash ContractHash {
      get { return contractHash_; }
      set {
        contractHash_ = value;
      }
    }

    /// <summary>Field number for the "ContractBytes" field.</summary>
    public const int ContractBytesFieldNumber = 3;
    private pb::ByteString contractBytes_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ContractBytes {
      get { return contractBytes_; }
      set {
        contractBytes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SmartContractRegistration);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SmartContractRegistration other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Category != other.Category) return false;
      if (!object.Equals(ContractHash, other.ContractHash)) return false;
      if (ContractBytes != other.ContractBytes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Category != 0) hash ^= Category.GetHashCode();
      if (contractHash_ != null) hash ^= ContractHash.GetHashCode();
      if (ContractBytes.Length != 0) hash ^= ContractBytes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Category != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Category);
      }
      if (contractHash_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ContractHash);
      }
      if (ContractBytes.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(ContractBytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Category != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Category);
      }
      if (contractHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ContractHash);
      }
      if (ContractBytes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ContractBytes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SmartContractRegistration other) {
      if (other == null) {
        return;
      }
      if (other.Category != 0) {
        Category = other.Category;
      }
      if (other.contractHash_ != null) {
        if (contractHash_ == null) {
          contractHash_ = new global::AElf.Kernel.Hash();
        }
        ContractHash.MergeFrom(other.ContractHash);
      }
      if (other.ContractBytes.Length != 0) {
        ContractBytes = other.ContractBytes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Category = input.ReadInt32();
            break;
          }
          case 18: {
            if (contractHash_ == null) {
              contractHash_ = new global::AElf.Kernel.Hash();
            }
            input.ReadMessage(contractHash_);
            break;
          }
          case 26: {
            ContractBytes = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SmartContractDeployment : pb::IMessage<SmartContractDeployment> {
    private static readonly pb::MessageParser<SmartContractDeployment> _parser = new pb::MessageParser<SmartContractDeployment>(() => new SmartContractDeployment());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SmartContractDeployment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.KernelReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SmartContractDeployment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SmartContractDeployment(SmartContractDeployment other) : this() {
      ContractHash = other.contractHash_ != null ? other.ContractHash.Clone() : null;
      Caller = other.caller_ != null ? other.Caller.Clone() : null;
      constructParams_ = other.constructParams_;
      incrementId_ = other.incrementId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SmartContractDeployment Clone() {
      return new SmartContractDeployment(this);
    }

    /// <summary>Field number for the "ContractHash" field.</summary>
    public const int ContractHashFieldNumber = 1;
    private global::AElf.Kernel.Hash contractHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Kernel.Hash ContractHash {
      get { return contractHash_; }
      set {
        contractHash_ = value;
      }
    }

    /// <summary>Field number for the "Caller" field.</summary>
    public const int CallerFieldNumber = 2;
    private global::AElf.Kernel.Hash caller_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Kernel.Hash Caller {
      get { return caller_; }
      set {
        caller_ = value;
      }
    }

    /// <summary>Field number for the "ConstructParams" field.</summary>
    public const int ConstructParamsFieldNumber = 3;
    private pb::ByteString constructParams_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ConstructParams {
      get { return constructParams_; }
      set {
        constructParams_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IncrementId" field.</summary>
    public const int IncrementIdFieldNumber = 4;
    private ulong incrementId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong IncrementId {
      get { return incrementId_; }
      set {
        incrementId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SmartContractDeployment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SmartContractDeployment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ContractHash, other.ContractHash)) return false;
      if (!object.Equals(Caller, other.Caller)) return false;
      if (ConstructParams != other.ConstructParams) return false;
      if (IncrementId != other.IncrementId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (contractHash_ != null) hash ^= ContractHash.GetHashCode();
      if (caller_ != null) hash ^= Caller.GetHashCode();
      if (ConstructParams.Length != 0) hash ^= ConstructParams.GetHashCode();
      if (IncrementId != 0UL) hash ^= IncrementId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (contractHash_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ContractHash);
      }
      if (caller_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Caller);
      }
      if (ConstructParams.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(ConstructParams);
      }
      if (IncrementId != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(IncrementId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (contractHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ContractHash);
      }
      if (caller_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Caller);
      }
      if (ConstructParams.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ConstructParams);
      }
      if (IncrementId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(IncrementId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SmartContractDeployment other) {
      if (other == null) {
        return;
      }
      if (other.contractHash_ != null) {
        if (contractHash_ == null) {
          contractHash_ = new global::AElf.Kernel.Hash();
        }
        ContractHash.MergeFrom(other.ContractHash);
      }
      if (other.caller_ != null) {
        if (caller_ == null) {
          caller_ = new global::AElf.Kernel.Hash();
        }
        Caller.MergeFrom(other.Caller);
      }
      if (other.ConstructParams.Length != 0) {
        ConstructParams = other.ConstructParams;
      }
      if (other.IncrementId != 0UL) {
        IncrementId = other.IncrementId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (contractHash_ == null) {
              contractHash_ = new global::AElf.Kernel.Hash();
            }
            input.ReadMessage(contractHash_);
            break;
          }
          case 18: {
            if (caller_ == null) {
              caller_ = new global::AElf.Kernel.Hash();
            }
            input.ReadMessage(caller_);
            break;
          }
          case 26: {
            ConstructParams = input.ReadBytes();
            break;
          }
          case 32: {
            IncrementId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Parameters : pb::IMessage<Parameters> {
    private static readonly pb::MessageParser<Parameters> _parser = new pb::MessageParser<Parameters>(() => new Parameters());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Parameters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.KernelReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Parameters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Parameters(Parameters other) : this() {
      params_ = other.params_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Parameters Clone() {
      return new Parameters(this);
    }

    /// <summary>Field number for the "Params" field.</summary>
    public const int ParamsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::AElf.Kernel.Param> _repeated_params_codec
        = pb::FieldCodec.ForMessage(10, global::AElf.Kernel.Param.Parser);
    private readonly pbc::RepeatedField<global::AElf.Kernel.Param> params_ = new pbc::RepeatedField<global::AElf.Kernel.Param>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Kernel.Param> Params {
      get { return params_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Parameters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Parameters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!params_.Equals(other.params_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= params_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      params_.WriteTo(output, _repeated_params_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += params_.CalculateSize(_repeated_params_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Parameters other) {
      if (other == null) {
        return;
      }
      params_.Add(other.params_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            params_.AddEntriesFrom(input, _repeated_params_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Param : pb::IMessage<Param> {
    private static readonly pb::MessageParser<Param> _parser = new pb::MessageParser<Param>(() => new Param());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Param> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.KernelReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Param() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Param(Param other) : this() {
      switch (other.DataCase) {
        case DataOneofCase.IntVal:
          IntVal = other.IntVal;
          break;
        case DataOneofCase.UintVal:
          UintVal = other.UintVal;
          break;
        case DataOneofCase.LongVal:
          LongVal = other.LongVal;
          break;
        case DataOneofCase.UlongVal:
          UlongVal = other.UlongVal;
          break;
        case DataOneofCase.BoolVal:
          BoolVal = other.BoolVal;
          break;
        case DataOneofCase.BytesVal:
          BytesVal = other.BytesVal;
          break;
        case DataOneofCase.StrVal:
          StrVal = other.StrVal;
          break;
        case DataOneofCase.DVal:
          DVal = other.DVal;
          break;
        case DataOneofCase.HashVal:
          HashVal = other.HashVal.Clone();
          break;
        case DataOneofCase.RegisterVal:
          RegisterVal = other.RegisterVal.Clone();
          break;
        case DataOneofCase.DeploymentVal:
          DeploymentVal = other.DeploymentVal.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Param Clone() {
      return new Param(this);
    }

    /// <summary>Field number for the "intVal" field.</summary>
    public const int IntValFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IntVal {
      get { return dataCase_ == DataOneofCase.IntVal ? (int) data_ : 0; }
      set {
        data_ = value;
        dataCase_ = DataOneofCase.IntVal;
      }
    }

    /// <summary>Field number for the "uintVal" field.</summary>
    public const int UintValFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UintVal {
      get { return dataCase_ == DataOneofCase.UintVal ? (uint) data_ : 0; }
      set {
        data_ = value;
        dataCase_ = DataOneofCase.UintVal;
      }
    }

    /// <summary>Field number for the "longVal" field.</summary>
    public const int LongValFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LongVal {
      get { return dataCase_ == DataOneofCase.LongVal ? (long) data_ : 0L; }
      set {
        data_ = value;
        dataCase_ = DataOneofCase.LongVal;
      }
    }

    /// <summary>Field number for the "ulongVal" field.</summary>
    public const int UlongValFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UlongVal {
      get { return dataCase_ == DataOneofCase.UlongVal ? (ulong) data_ : 0UL; }
      set {
        data_ = value;
        dataCase_ = DataOneofCase.UlongVal;
      }
    }

    /// <summary>Field number for the "boolVal" field.</summary>
    public const int BoolValFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool BoolVal {
      get { return dataCase_ == DataOneofCase.BoolVal ? (bool) data_ : false; }
      set {
        data_ = value;
        dataCase_ = DataOneofCase.BoolVal;
      }
    }

    /// <summary>Field number for the "bytesVal" field.</summary>
    public const int BytesValFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString BytesVal {
      get { return dataCase_ == DataOneofCase.BytesVal ? (pb::ByteString) data_ : pb::ByteString.Empty; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        dataCase_ = DataOneofCase.BytesVal;
      }
    }

    /// <summary>Field number for the "strVal" field.</summary>
    public const int StrValFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StrVal {
      get { return dataCase_ == DataOneofCase.StrVal ? (string) data_ : ""; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        dataCase_ = DataOneofCase.StrVal;
      }
    }

    /// <summary>Field number for the "dVal" field.</summary>
    public const int DValFieldNumber = 8;
    /// <summary>
    /// Maybe don't allow floating point
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double DVal {
      get { return dataCase_ == DataOneofCase.DVal ? (double) data_ : 0D; }
      set {
        data_ = value;
        dataCase_ = DataOneofCase.DVal;
      }
    }

    /// <summary>Field number for the "hashVal" field.</summary>
    public const int HashValFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Kernel.Hash HashVal {
      get { return dataCase_ == DataOneofCase.HashVal ? (global::AElf.Kernel.Hash) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.HashVal;
      }
    }

    /// <summary>Field number for the "registerVal" field.</summary>
    public const int RegisterValFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Kernel.SmartContractRegistration RegisterVal {
      get { return dataCase_ == DataOneofCase.RegisterVal ? (global::AElf.Kernel.SmartContractRegistration) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.RegisterVal;
      }
    }

    /// <summary>Field number for the "deploymentVal" field.</summary>
    public const int DeploymentValFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Kernel.SmartContractDeployment DeploymentVal {
      get { return dataCase_ == DataOneofCase.DeploymentVal ? (global::AElf.Kernel.SmartContractDeployment) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.DeploymentVal;
      }
    }

    private object data_;
    /// <summary>Enum of possible cases for the "data" oneof.</summary>
    public enum DataOneofCase {
      None = 0,
      IntVal = 1,
      UintVal = 2,
      LongVal = 3,
      UlongVal = 4,
      BoolVal = 5,
      BytesVal = 6,
      StrVal = 7,
      DVal = 8,
      HashVal = 9,
      RegisterVal = 10,
      DeploymentVal = 11,
    }
    private DataOneofCase dataCase_ = DataOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataOneofCase DataCase {
      get { return dataCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearData() {
      dataCase_ = DataOneofCase.None;
      data_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Param);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Param other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IntVal != other.IntVal) return false;
      if (UintVal != other.UintVal) return false;
      if (LongVal != other.LongVal) return false;
      if (UlongVal != other.UlongVal) return false;
      if (BoolVal != other.BoolVal) return false;
      if (BytesVal != other.BytesVal) return false;
      if (StrVal != other.StrVal) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DVal, other.DVal)) return false;
      if (!object.Equals(HashVal, other.HashVal)) return false;
      if (!object.Equals(RegisterVal, other.RegisterVal)) return false;
      if (!object.Equals(DeploymentVal, other.DeploymentVal)) return false;
      if (DataCase != other.DataCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (dataCase_ == DataOneofCase.IntVal) hash ^= IntVal.GetHashCode();
      if (dataCase_ == DataOneofCase.UintVal) hash ^= UintVal.GetHashCode();
      if (dataCase_ == DataOneofCase.LongVal) hash ^= LongVal.GetHashCode();
      if (dataCase_ == DataOneofCase.UlongVal) hash ^= UlongVal.GetHashCode();
      if (dataCase_ == DataOneofCase.BoolVal) hash ^= BoolVal.GetHashCode();
      if (dataCase_ == DataOneofCase.BytesVal) hash ^= BytesVal.GetHashCode();
      if (dataCase_ == DataOneofCase.StrVal) hash ^= StrVal.GetHashCode();
      if (dataCase_ == DataOneofCase.DVal) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DVal);
      if (dataCase_ == DataOneofCase.HashVal) hash ^= HashVal.GetHashCode();
      if (dataCase_ == DataOneofCase.RegisterVal) hash ^= RegisterVal.GetHashCode();
      if (dataCase_ == DataOneofCase.DeploymentVal) hash ^= DeploymentVal.GetHashCode();
      hash ^= (int) dataCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (dataCase_ == DataOneofCase.IntVal) {
        output.WriteRawTag(8);
        output.WriteInt32(IntVal);
      }
      if (dataCase_ == DataOneofCase.UintVal) {
        output.WriteRawTag(16);
        output.WriteUInt32(UintVal);
      }
      if (dataCase_ == DataOneofCase.LongVal) {
        output.WriteRawTag(24);
        output.WriteInt64(LongVal);
      }
      if (dataCase_ == DataOneofCase.UlongVal) {
        output.WriteRawTag(32);
        output.WriteUInt64(UlongVal);
      }
      if (dataCase_ == DataOneofCase.BoolVal) {
        output.WriteRawTag(40);
        output.WriteBool(BoolVal);
      }
      if (dataCase_ == DataOneofCase.BytesVal) {
        output.WriteRawTag(50);
        output.WriteBytes(BytesVal);
      }
      if (dataCase_ == DataOneofCase.StrVal) {
        output.WriteRawTag(58);
        output.WriteString(StrVal);
      }
      if (dataCase_ == DataOneofCase.DVal) {
        output.WriteRawTag(65);
        output.WriteDouble(DVal);
      }
      if (dataCase_ == DataOneofCase.HashVal) {
        output.WriteRawTag(74);
        output.WriteMessage(HashVal);
      }
      if (dataCase_ == DataOneofCase.RegisterVal) {
        output.WriteRawTag(82);
        output.WriteMessage(RegisterVal);
      }
      if (dataCase_ == DataOneofCase.DeploymentVal) {
        output.WriteRawTag(90);
        output.WriteMessage(DeploymentVal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (dataCase_ == DataOneofCase.IntVal) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IntVal);
      }
      if (dataCase_ == DataOneofCase.UintVal) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UintVal);
      }
      if (dataCase_ == DataOneofCase.LongVal) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LongVal);
      }
      if (dataCase_ == DataOneofCase.UlongVal) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UlongVal);
      }
      if (dataCase_ == DataOneofCase.BoolVal) {
        size += 1 + 1;
      }
      if (dataCase_ == DataOneofCase.BytesVal) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(BytesVal);
      }
      if (dataCase_ == DataOneofCase.StrVal) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StrVal);
      }
      if (dataCase_ == DataOneofCase.DVal) {
        size += 1 + 8;
      }
      if (dataCase_ == DataOneofCase.HashVal) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HashVal);
      }
      if (dataCase_ == DataOneofCase.RegisterVal) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RegisterVal);
      }
      if (dataCase_ == DataOneofCase.DeploymentVal) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeploymentVal);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Param other) {
      if (other == null) {
        return;
      }
      switch (other.DataCase) {
        case DataOneofCase.IntVal:
          IntVal = other.IntVal;
          break;
        case DataOneofCase.UintVal:
          UintVal = other.UintVal;
          break;
        case DataOneofCase.LongVal:
          LongVal = other.LongVal;
          break;
        case DataOneofCase.UlongVal:
          UlongVal = other.UlongVal;
          break;
        case DataOneofCase.BoolVal:
          BoolVal = other.BoolVal;
          break;
        case DataOneofCase.BytesVal:
          BytesVal = other.BytesVal;
          break;
        case DataOneofCase.StrVal:
          StrVal = other.StrVal;
          break;
        case DataOneofCase.DVal:
          DVal = other.DVal;
          break;
        case DataOneofCase.HashVal:
          if (HashVal == null) {
            HashVal = new global::AElf.Kernel.Hash();
          }
          HashVal.MergeFrom(other.HashVal);
          break;
        case DataOneofCase.RegisterVal:
          if (RegisterVal == null) {
            RegisterVal = new global::AElf.Kernel.SmartContractRegistration();
          }
          RegisterVal.MergeFrom(other.RegisterVal);
          break;
        case DataOneofCase.DeploymentVal:
          if (DeploymentVal == null) {
            DeploymentVal = new global::AElf.Kernel.SmartContractDeployment();
          }
          DeploymentVal.MergeFrom(other.DeploymentVal);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IntVal = input.ReadInt32();
            break;
          }
          case 16: {
            UintVal = input.ReadUInt32();
            break;
          }
          case 24: {
            LongVal = input.ReadInt64();
            break;
          }
          case 32: {
            UlongVal = input.ReadUInt64();
            break;
          }
          case 40: {
            BoolVal = input.ReadBool();
            break;
          }
          case 50: {
            BytesVal = input.ReadBytes();
            break;
          }
          case 58: {
            StrVal = input.ReadString();
            break;
          }
          case 65: {
            DVal = input.ReadDouble();
            break;
          }
          case 74: {
            global::AElf.Kernel.Hash subBuilder = new global::AElf.Kernel.Hash();
            if (dataCase_ == DataOneofCase.HashVal) {
              subBuilder.MergeFrom(HashVal);
            }
            input.ReadMessage(subBuilder);
            HashVal = subBuilder;
            break;
          }
          case 82: {
            global::AElf.Kernel.SmartContractRegistration subBuilder = new global::AElf.Kernel.SmartContractRegistration();
            if (dataCase_ == DataOneofCase.RegisterVal) {
              subBuilder.MergeFrom(RegisterVal);
            }
            input.ReadMessage(subBuilder);
            RegisterVal = subBuilder;
            break;
          }
          case 90: {
            global::AElf.Kernel.SmartContractDeployment subBuilder = new global::AElf.Kernel.SmartContractDeployment();
            if (dataCase_ == DataOneofCase.DeploymentVal) {
              subBuilder.MergeFrom(DeploymentVal);
            }
            input.ReadMessage(subBuilder);
            DeploymentVal = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class SmartContractInvokeContext : pb::IMessage<SmartContractInvokeContext> {
    private static readonly pb::MessageParser<SmartContractInvokeContext> _parser = new pb::MessageParser<SmartContractInvokeContext>(() => new SmartContractInvokeContext());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SmartContractInvokeContext> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.KernelReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SmartContractInvokeContext() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SmartContractInvokeContext(SmartContractInvokeContext other) : this() {
      Caller = other.caller_ != null ? other.Caller.Clone() : null;
      incrementId_ = other.incrementId_;
      methodName_ = other.methodName_;
      params_ = other.params_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SmartContractInvokeContext Clone() {
      return new SmartContractInvokeContext(this);
    }

    /// <summary>Field number for the "Caller" field.</summary>
    public const int CallerFieldNumber = 1;
    private global::AElf.Kernel.Hash caller_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Kernel.Hash Caller {
      get { return caller_; }
      set {
        caller_ = value;
      }
    }

    /// <summary>Field number for the "IncrementId" field.</summary>
    public const int IncrementIdFieldNumber = 2;
    private ulong incrementId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong IncrementId {
      get { return incrementId_; }
      set {
        incrementId_ = value;
      }
    }

    /// <summary>Field number for the "MethodName" field.</summary>
    public const int MethodNameFieldNumber = 3;
    private string methodName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MethodName {
      get { return methodName_; }
      set {
        methodName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Params" field.</summary>
    public const int ParamsFieldNumber = 4;
    private pb::ByteString params_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Params {
      get { return params_; }
      set {
        params_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SmartContractInvokeContext);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SmartContractInvokeContext other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Caller, other.Caller)) return false;
      if (IncrementId != other.IncrementId) return false;
      if (MethodName != other.MethodName) return false;
      if (Params != other.Params) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (caller_ != null) hash ^= Caller.GetHashCode();
      if (IncrementId != 0UL) hash ^= IncrementId.GetHashCode();
      if (MethodName.Length != 0) hash ^= MethodName.GetHashCode();
      if (Params.Length != 0) hash ^= Params.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (caller_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Caller);
      }
      if (IncrementId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(IncrementId);
      }
      if (MethodName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MethodName);
      }
      if (Params.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Params);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (caller_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Caller);
      }
      if (IncrementId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(IncrementId);
      }
      if (MethodName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MethodName);
      }
      if (Params.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Params);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SmartContractInvokeContext other) {
      if (other == null) {
        return;
      }
      if (other.caller_ != null) {
        if (caller_ == null) {
          caller_ = new global::AElf.Kernel.Hash();
        }
        Caller.MergeFrom(other.Caller);
      }
      if (other.IncrementId != 0UL) {
        IncrementId = other.IncrementId;
      }
      if (other.MethodName.Length != 0) {
        MethodName = other.MethodName;
      }
      if (other.Params.Length != 0) {
        Params = other.Params;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (caller_ == null) {
              caller_ = new global::AElf.Kernel.Hash();
            }
            input.ReadMessage(caller_);
            break;
          }
          case 16: {
            IncrementId = input.ReadUInt64();
            break;
          }
          case 26: {
            MethodName = input.ReadString();
            break;
          }
          case 34: {
            Params = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Change : pb::IMessage<Change> {
    private static readonly pb::MessageParser<Change> _parser = new pb::MessageParser<Change>(() => new Change());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Change> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.KernelReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Change() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Change(Change other) : this() {
      befores_ = other.befores_.Clone();
      After = other.after_ != null ? other.After.Clone() : null;
      TransactionIds = other.transactionIds_ != null ? other.TransactionIds.Clone() : null;
      LatestChangedBlockHash = other.latestChangedBlockHash_ != null ? other.LatestChangedBlockHash.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Change Clone() {
      return new Change(this);
    }

    /// <summary>Field number for the "Befores" field.</summary>
    public const int BeforesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::AElf.Kernel.Hash> _repeated_befores_codec
        = pb::FieldCodec.ForMessage(10, global::AElf.Kernel.Hash.Parser);
    private readonly pbc::RepeatedField<global::AElf.Kernel.Hash> befores_ = new pbc::RepeatedField<global::AElf.Kernel.Hash>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Kernel.Hash> Befores {
      get { return befores_; }
    }

    /// <summary>Field number for the "After" field.</summary>
    public const int AfterFieldNumber = 2;
    private global::AElf.Kernel.Hash after_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Kernel.Hash After {
      get { return after_; }
      set {
        after_ = value;
      }
    }

    /// <summary>Field number for the "TransactionIds" field.</summary>
    public const int TransactionIdsFieldNumber = 3;
    private global::AElf.Kernel.Hash transactionIds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Kernel.Hash TransactionIds {
      get { return transactionIds_; }
      set {
        transactionIds_ = value;
      }
    }

    /// <summary>Field number for the "LatestChangedBlockHash" field.</summary>
    public const int LatestChangedBlockHashFieldNumber = 4;
    private global::AElf.Kernel.Hash latestChangedBlockHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Kernel.Hash LatestChangedBlockHash {
      get { return latestChangedBlockHash_; }
      set {
        latestChangedBlockHash_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Change);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Change other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!befores_.Equals(other.befores_)) return false;
      if (!object.Equals(After, other.After)) return false;
      if (!object.Equals(TransactionIds, other.TransactionIds)) return false;
      if (!object.Equals(LatestChangedBlockHash, other.LatestChangedBlockHash)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= befores_.GetHashCode();
      if (after_ != null) hash ^= After.GetHashCode();
      if (transactionIds_ != null) hash ^= TransactionIds.GetHashCode();
      if (latestChangedBlockHash_ != null) hash ^= LatestChangedBlockHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      befores_.WriteTo(output, _repeated_befores_codec);
      if (after_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(After);
      }
      if (transactionIds_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TransactionIds);
      }
      if (latestChangedBlockHash_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LatestChangedBlockHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += befores_.CalculateSize(_repeated_befores_codec);
      if (after_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(After);
      }
      if (transactionIds_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TransactionIds);
      }
      if (latestChangedBlockHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LatestChangedBlockHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Change other) {
      if (other == null) {
        return;
      }
      befores_.Add(other.befores_);
      if (other.after_ != null) {
        if (after_ == null) {
          after_ = new global::AElf.Kernel.Hash();
        }
        After.MergeFrom(other.After);
      }
      if (other.transactionIds_ != null) {
        if (transactionIds_ == null) {
          transactionIds_ = new global::AElf.Kernel.Hash();
        }
        TransactionIds.MergeFrom(other.TransactionIds);
      }
      if (other.latestChangedBlockHash_ != null) {
        if (latestChangedBlockHash_ == null) {
          latestChangedBlockHash_ = new global::AElf.Kernel.Hash();
        }
        LatestChangedBlockHash.MergeFrom(other.LatestChangedBlockHash);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            befores_.AddEntriesFrom(input, _repeated_befores_codec);
            break;
          }
          case 18: {
            if (after_ == null) {
              after_ = new global::AElf.Kernel.Hash();
            }
            input.ReadMessage(after_);
            break;
          }
          case 26: {
            if (transactionIds_ == null) {
              transactionIds_ = new global::AElf.Kernel.Hash();
            }
            input.ReadMessage(transactionIds_);
            break;
          }
          case 34: {
            if (latestChangedBlockHash_ == null) {
              latestChangedBlockHash_ = new global::AElf.Kernel.Hash();
            }
            input.ReadMessage(latestChangedBlockHash_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PairHashChange : pb::IMessage<PairHashChange> {
    private static readonly pb::MessageParser<PairHashChange> _parser = new pb::MessageParser<PairHashChange>(() => new PairHashChange());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PairHashChange> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.KernelReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PairHashChange() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PairHashChange(PairHashChange other) : this() {
      Key = other.key_ != null ? other.Key.Clone() : null;
      Value = other.value_ != null ? other.Value.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PairHashChange Clone() {
      return new PairHashChange(this);
    }

    /// <summary>Field number for the "Key" field.</summary>
    public const int KeyFieldNumber = 1;
    private global::AElf.Kernel.Hash key_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Kernel.Hash Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    /// <summary>Field number for the "Value" field.</summary>
    public const int ValueFieldNumber = 2;
    private global::AElf.Kernel.Change value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Kernel.Change Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PairHashChange);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PairHashChange other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Key, other.Key)) return false;
      if (!object.Equals(Value, other.Value)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (key_ != null) hash ^= Key.GetHashCode();
      if (value_ != null) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (key_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Key);
      }
      if (value_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (key_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Key);
      }
      if (value_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PairHashChange other) {
      if (other == null) {
        return;
      }
      if (other.key_ != null) {
        if (key_ == null) {
          key_ = new global::AElf.Kernel.Hash();
        }
        Key.MergeFrom(other.Key);
      }
      if (other.value_ != null) {
        if (value_ == null) {
          value_ = new global::AElf.Kernel.Change();
        }
        Value.MergeFrom(other.Value);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (key_ == null) {
              key_ = new global::AElf.Kernel.Hash();
            }
            input.ReadMessage(key_);
            break;
          }
          case 18: {
            if (value_ == null) {
              value_ = new global::AElf.Kernel.Change();
            }
            input.ReadMessage(value_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChangesDict : pb::IMessage<ChangesDict> {
    private static readonly pb::MessageParser<ChangesDict> _parser = new pb::MessageParser<ChangesDict>(() => new ChangesDict());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChangesDict> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.KernelReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangesDict() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangesDict(ChangesDict other) : this() {
      dict_ = other.dict_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangesDict Clone() {
      return new ChangesDict(this);
    }

    /// <summary>Field number for the "Dict" field.</summary>
    public const int DictFieldNumber = 1;
    private static readonly pb::FieldCodec<global::AElf.Kernel.PairHashChange> _repeated_dict_codec
        = pb::FieldCodec.ForMessage(10, global::AElf.Kernel.PairHashChange.Parser);
    private readonly pbc::RepeatedField<global::AElf.Kernel.PairHashChange> dict_ = new pbc::RepeatedField<global::AElf.Kernel.PairHashChange>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Kernel.PairHashChange> Dict {
      get { return dict_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChangesDict);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChangesDict other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!dict_.Equals(other.dict_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= dict_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      dict_.WriteTo(output, _repeated_dict_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += dict_.CalculateSize(_repeated_dict_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChangesDict other) {
      if (other == null) {
        return;
      }
      dict_.Add(other.dict_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            dict_.AddEntriesFrom(input, _repeated_dict_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Chain : pb::IMessage<Chain> {
    private static readonly pb::MessageParser<Chain> _parser = new pb::MessageParser<Chain>(() => new Chain());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Chain> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.KernelReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Chain() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Chain(Chain other) : this() {
      Id = other.id_ != null ? other.Id.Clone() : null;
      GenesisBlockHash = other.genesisBlockHash_ != null ? other.GenesisBlockHash.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Chain Clone() {
      return new Chain(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::AElf.Kernel.Hash id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Kernel.Hash Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "GenesisBlockHash" field.</summary>
    public const int GenesisBlockHashFieldNumber = 2;
    private global::AElf.Kernel.Hash genesisBlockHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Kernel.Hash GenesisBlockHash {
      get { return genesisBlockHash_; }
      set {
        genesisBlockHash_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Chain);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Chain other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (!object.Equals(GenesisBlockHash, other.GenesisBlockHash)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (genesisBlockHash_ != null) hash ^= GenesisBlockHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (genesisBlockHash_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(GenesisBlockHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (genesisBlockHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GenesisBlockHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Chain other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          id_ = new global::AElf.Kernel.Hash();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.genesisBlockHash_ != null) {
        if (genesisBlockHash_ == null) {
          genesisBlockHash_ = new global::AElf.Kernel.Hash();
        }
        GenesisBlockHash.MergeFrom(other.GenesisBlockHash);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              id_ = new global::AElf.Kernel.Hash();
            }
            input.ReadMessage(id_);
            break;
          }
          case 18: {
            if (genesisBlockHash_ == null) {
              genesisBlockHash_ = new global::AElf.Kernel.Hash();
            }
            input.ReadMessage(genesisBlockHash_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BlockProducer : pb::IMessage<BlockProducer> {
    private static readonly pb::MessageParser<BlockProducer> _parser = new pb::MessageParser<BlockProducer>(() => new BlockProducer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockProducer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.KernelReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockProducer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockProducer(BlockProducer other) : this() {
      nodes_ = other.nodes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockProducer Clone() {
      return new BlockProducer(this);
    }

    /// <summary>Field number for the "Nodes" field.</summary>
    public const int NodesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_nodes_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> nodes_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Nodes {
      get { return nodes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockProducer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockProducer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!nodes_.Equals(other.nodes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= nodes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      nodes_.WriteTo(output, _repeated_nodes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += nodes_.CalculateSize(_repeated_nodes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockProducer other) {
      if (other == null) {
        return;
      }
      nodes_.Add(other.nodes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            nodes_.AddEntriesFrom(input, _repeated_nodes_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BPInfo : pb::IMessage<BPInfo> {
    private static readonly pb::MessageParser<BPInfo> _parser = new pb::MessageParser<BPInfo>(() => new BPInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BPInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.KernelReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BPInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BPInfo(BPInfo other) : this() {
      order_ = other.order_;
      isEBP_ = other.isEBP_;
      InValue = other.inValue_ != null ? other.InValue.Clone() : null;
      OutValue = other.outValue_ != null ? other.OutValue.Clone() : null;
      Signature = other.signature_ != null ? other.Signature.Clone() : null;
      TimeSlot = other.timeSlot_ != null ? other.TimeSlot.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BPInfo Clone() {
      return new BPInfo(this);
    }

    /// <summary>Field number for the "Order" field.</summary>
    public const int OrderFieldNumber = 1;
    private int order_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Order {
      get { return order_; }
      set {
        order_ = value;
      }
    }

    /// <summary>Field number for the "IsEBP" field.</summary>
    public const int IsEBPFieldNumber = 2;
    private bool isEBP_;
    /// <summary>
    ///EBP = Extra Block Producer
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsEBP {
      get { return isEBP_; }
      set {
        isEBP_ = value;
      }
    }

    /// <summary>Field number for the "InValue" field.</summary>
    public const int InValueFieldNumber = 3;
    private global::AElf.Kernel.Hash inValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Kernel.Hash InValue {
      get { return inValue_; }
      set {
        inValue_ = value;
      }
    }

    /// <summary>Field number for the "OutValue" field.</summary>
    public const int OutValueFieldNumber = 4;
    private global::AElf.Kernel.Hash outValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Kernel.Hash OutValue {
      get { return outValue_; }
      set {
        outValue_ = value;
      }
    }

    /// <summary>Field number for the "Signature" field.</summary>
    public const int SignatureFieldNumber = 5;
    private global::AElf.Kernel.Hash signature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Kernel.Hash Signature {
      get { return signature_; }
      set {
        signature_ = value;
      }
    }

    /// <summary>Field number for the "TimeSlot" field.</summary>
    public const int TimeSlotFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timeSlot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp TimeSlot {
      get { return timeSlot_; }
      set {
        timeSlot_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BPInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BPInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Order != other.Order) return false;
      if (IsEBP != other.IsEBP) return false;
      if (!object.Equals(InValue, other.InValue)) return false;
      if (!object.Equals(OutValue, other.OutValue)) return false;
      if (!object.Equals(Signature, other.Signature)) return false;
      if (!object.Equals(TimeSlot, other.TimeSlot)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Order != 0) hash ^= Order.GetHashCode();
      if (IsEBP != false) hash ^= IsEBP.GetHashCode();
      if (inValue_ != null) hash ^= InValue.GetHashCode();
      if (outValue_ != null) hash ^= OutValue.GetHashCode();
      if (signature_ != null) hash ^= Signature.GetHashCode();
      if (timeSlot_ != null) hash ^= TimeSlot.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Order != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Order);
      }
      if (IsEBP != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsEBP);
      }
      if (inValue_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(InValue);
      }
      if (outValue_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(OutValue);
      }
      if (signature_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Signature);
      }
      if (timeSlot_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(TimeSlot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Order != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Order);
      }
      if (IsEBP != false) {
        size += 1 + 1;
      }
      if (inValue_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InValue);
      }
      if (outValue_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OutValue);
      }
      if (signature_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Signature);
      }
      if (timeSlot_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeSlot);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BPInfo other) {
      if (other == null) {
        return;
      }
      if (other.Order != 0) {
        Order = other.Order;
      }
      if (other.IsEBP != false) {
        IsEBP = other.IsEBP;
      }
      if (other.inValue_ != null) {
        if (inValue_ == null) {
          inValue_ = new global::AElf.Kernel.Hash();
        }
        InValue.MergeFrom(other.InValue);
      }
      if (other.outValue_ != null) {
        if (outValue_ == null) {
          outValue_ = new global::AElf.Kernel.Hash();
        }
        OutValue.MergeFrom(other.OutValue);
      }
      if (other.signature_ != null) {
        if (signature_ == null) {
          signature_ = new global::AElf.Kernel.Hash();
        }
        Signature.MergeFrom(other.Signature);
      }
      if (other.timeSlot_ != null) {
        if (timeSlot_ == null) {
          timeSlot_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        TimeSlot.MergeFrom(other.TimeSlot);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Order = input.ReadInt32();
            break;
          }
          case 16: {
            IsEBP = input.ReadBool();
            break;
          }
          case 26: {
            if (inValue_ == null) {
              inValue_ = new global::AElf.Kernel.Hash();
            }
            input.ReadMessage(inValue_);
            break;
          }
          case 34: {
            if (outValue_ == null) {
              outValue_ = new global::AElf.Kernel.Hash();
            }
            input.ReadMessage(outValue_);
            break;
          }
          case 42: {
            if (signature_ == null) {
              signature_ = new global::AElf.Kernel.Hash();
            }
            input.ReadMessage(signature_);
            break;
          }
          case 50: {
            if (timeSlot_ == null) {
              timeSlot_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(timeSlot_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RoundInfo : pb::IMessage<RoundInfo> {
    private static readonly pb::MessageParser<RoundInfo> _parser = new pb::MessageParser<RoundInfo>(() => new RoundInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoundInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.KernelReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoundInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoundInfo(RoundInfo other) : this() {
      info_ = other.info_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoundInfo Clone() {
      return new RoundInfo(this);
    }

    /// <summary>Field number for the "Info" field.</summary>
    public const int InfoFieldNumber = 1;
    private static readonly pbc::MapField<string, global::AElf.Kernel.BPInfo>.Codec _map_info_codec
        = new pbc::MapField<string, global::AElf.Kernel.BPInfo>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::AElf.Kernel.BPInfo.Parser), 10);
    private readonly pbc::MapField<string, global::AElf.Kernel.BPInfo> info_ = new pbc::MapField<string, global::AElf.Kernel.BPInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::AElf.Kernel.BPInfo> Info {
      get { return info_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoundInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoundInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Info.Equals(other.Info)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Info.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      info_.WriteTo(output, _map_info_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += info_.CalculateSize(_map_info_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoundInfo other) {
      if (other == null) {
        return;
      }
      info_.Add(other.info_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            info_.AddEntriesFrom(input, _map_info_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DPoSInfo : pb::IMessage<DPoSInfo> {
    private static readonly pb::MessageParser<DPoSInfo> _parser = new pb::MessageParser<DPoSInfo>(() => new DPoSInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DPoSInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.KernelReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DPoSInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DPoSInfo(DPoSInfo other) : this() {
      roundInfo_ = other.roundInfo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DPoSInfo Clone() {
      return new DPoSInfo(this);
    }

    /// <summary>Field number for the "RoundInfo" field.</summary>
    public const int RoundInfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::AElf.Kernel.RoundInfo> _repeated_roundInfo_codec
        = pb::FieldCodec.ForMessage(10, global::AElf.Kernel.RoundInfo.Parser);
    private readonly pbc::RepeatedField<global::AElf.Kernel.RoundInfo> roundInfo_ = new pbc::RepeatedField<global::AElf.Kernel.RoundInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Kernel.RoundInfo> RoundInfo {
      get { return roundInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DPoSInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DPoSInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!roundInfo_.Equals(other.roundInfo_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= roundInfo_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      roundInfo_.WriteTo(output, _repeated_roundInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += roundInfo_.CalculateSize(_repeated_roundInfo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DPoSInfo other) {
      if (other == null) {
        return;
      }
      roundInfo_.Add(other.roundInfo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            roundInfo_.AddEntriesFrom(input, _repeated_roundInfo_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
